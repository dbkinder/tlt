Search.setIndex({"docnames": ["DATASETS", "GetStarted", "Legal", "Models", "_autosummary/tlt.datasets.dataset.BaseDataset", "_autosummary/tlt.datasets.hf_dataset.HFDataset", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "_autosummary/tlt.datasets.tf_dataset.TFDataset", "_autosummary/tlt.models.hf_model.HFModel", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel", "_autosummary/tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel", "_autosummary/tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "_autosummary/tlt.models.model.BaseModel", "_autosummary/tlt.models.pytorch_model.PyTorchModel", "_autosummary/tlt.models.text_classification.pytorch_hf_text_classification_model.PyTorchHFTextClassificationModel", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel", "_autosummary/tlt.models.text_classification.tf_hf_text_classification_model.TFHFTextClassificationModel", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "_autosummary/tlt.models.tf_model.TFModel", "api", "cli", "distributed", "docbuild", "examples/cli/README", "examples/cli/general", "examples/cli/image_classification", "examples/cli/text_classification", "index", "notebooks", "notebooks/Medical_Imaging_Classification", "notebooks/Remote_Sensing_Image_Scene_Classification", "notebooks/TLT_PyTorch_Anomly_Detection", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning", "notebooks/TLT_PyTorch_Text_Classification_Transfer_Learning", "notebooks/TLT_TF_Image_Classification_Transfer_Learning", "notebooks/TLT_TF_Text_Classification_Transfer_Learning", "notebooks/setup", "tlt/distributed/README"], "filenames": ["DATASETS.rst", "GetStarted.rst", "Legal.rst", "Models.rst", "_autosummary/tlt.datasets.dataset.BaseDataset.rst", "_autosummary/tlt.datasets.hf_dataset.HFDataset.rst", "_autosummary/tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset.rst", "_autosummary/tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.rst", "_autosummary/tlt.datasets.pytorch_dataset.PyTorchDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.rst", "_autosummary/tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.rst", "_autosummary/tlt.datasets.tf_dataset.TFDataset.rst", "_autosummary/tlt.models.hf_model.HFModel.rst", "_autosummary/tlt.models.image_classification.image_classification_model.ImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.rst", "_autosummary/tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.rst", "_autosummary/tlt.models.model.BaseModel.rst", "_autosummary/tlt.models.pytorch_model.PyTorchModel.rst", "_autosummary/tlt.models.text_classification.pytorch_hf_text_classification_model.PyTorchHFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.text_classification_model.TextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tf_hf_text_classification_model.TFHFTextClassificationModel.rst", "_autosummary/tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.rst", "_autosummary/tlt.models.tf_model.TFModel.rst", "api.rst", "cli.rst", "distributed.rst", "docbuild.rst", "examples/cli/README.rst", "examples/cli/general.rst", "examples/cli/image_classification.rst", "examples/cli/text_classification.rst", "index.rst", "notebooks.rst", "notebooks/Medical_Imaging_Classification.nblink", "notebooks/Remote_Sensing_Image_Scene_Classification.nblink", "notebooks/TLT_PyTorch_Anomly_Detection.nblink", "notebooks/TLT_PyTorch_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_PyTorch_Text_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Image_Classification_Transfer_Learning.nblink", "notebooks/TLT_TF_Text_Classification_Transfer_Learning.nblink", "notebooks/setup.rst", "tlt/distributed/README.rst"], "titles": ["Datasets", "Get Started", "Legal Information", "Intel\u00ae Transfer Learning Tool Supported Models", "tlt.datasets.dataset.BaseDataset", "tlt.datasets.hf_dataset.HFDataset", "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset", "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset", "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset", "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset", "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset", "tlt.datasets.pytorch_dataset.PyTorchDataset", "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset", "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset", "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset", "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset", "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset", "tlt.datasets.tf_dataset.TFDataset", "tlt.models.hf_model.HFModel", "tlt.models.image_classification.image_classification_model.ImageClassificationModel", "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel", "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel", "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel", "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel", "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel", "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel", "tlt.models.model.BaseModel", "tlt.models.pytorch_model.PyTorchModel", "tlt.models.text_classification.pytorch_hf_text_classification_model.PyTorchHFTextClassificationModel", "tlt.models.text_classification.text_classification_model.TextClassificationModel", "tlt.models.text_classification.tf_hf_text_classification_model.TFHFTextClassificationModel", "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel", "tlt.models.tf_model.TFModel", "API Reference", "CLI Reference", "Distributed Training", "Building Documentation", "Intel\u00ae Transfer Learning Tool CLI Examples", "Intel\u00ae Transfer Learning Tool CLI Examples", "Image Classification Intel\u00ae Transfer Learning Tool CLI Examples", "Text Classification Intel Transfer Learning Tool CLI Examples", "Intel\u00ae Transfer Learning Tool", "Example Notebooks", "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Image Anomaly Detection with PyTorch using Intel\u00ae Transfer Learning Tool", "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API", "Text Classification fine tuning using Pytorch and the Intel\u00ae Transfer Learning Tool API", "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API", "Environment Setup and Running the Notebooks", "Distributed Training"], "terms": {"thi": [0, 1, 2, 12, 15, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "i": [0, 1, 2, 7, 8, 12, 15, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "comprehens": [0, 45], "list": [0, 1, 12, 15, 33, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49], "public": [0, 2, 35, 41, 45, 46, 48, 51], "us": [0, 2, 4, 7, 8, 12, 15, 26, 28, 30, 31, 33, 34, 35, 37, 38, 41, 42, 50, 51], "repositori": [0, 40, 42, 47, 49, 50], "name": [0, 1, 2, 3, 7, 8, 12, 15, 33, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51], "link": [0, 41, 43, 44, 47], "sourc": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 41, 42, 50], "framework": [0, 1, 3, 18, 19, 26, 27, 29, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "case": [0, 1, 3, 33, 34, 37, 38, 41, 42, 46, 47, 48, 49], "ag": 0, "new": [0, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51], "hug": [0, 1, 3, 5, 13, 18, 28, 30, 33, 41, 47, 49], "face": [0, 1, 3, 5, 13, 18, 28, 30, 33, 41, 47, 49], "pytorch": [0, 1, 3, 7, 11, 21, 22, 27, 28, 33, 34, 37, 38, 40, 41, 42], "text": [0, 1, 12, 13, 14, 15, 16, 28, 29, 30, 31, 34, 37, 38, 41, 42, 50], "classif": [0, 1, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 34, 37, 38, 41, 42, 50], "tfd": 0, "tensorflow": [0, 1, 3, 8, 9, 15, 16, 30, 33, 34, 37, 38, 39, 40, 41, 42, 46, 50], "food101": [0, 46], "torchvis": [0, 3, 10, 25, 33, 34, 41, 45], "imag": [0, 1, 6, 7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25, 37, 38, 41, 42, 49], "sm": [0, 40, 47, 49], "spam": [0, 40, 47, 49], "collect": [0, 40, 43, 47, 49], "tf": [0, 15, 17, 23, 24, 31, 32, 33, 42, 43, 44, 48, 49, 50], "flower": [0, 1, 37, 38, 39, 46, 48], "cat": 0, "v": 0, "dog": 0, "country211": [0, 46], "dtd": [0, 46], "fgvcaircraft": [0, 46], "renderedsst2": [0, 46], "rock": 0, "paper": 0, "scissor": 0, "rotten_tomato": [0, 40, 47], "tweetev": 0, "cifar10": [0, 46], "imdb": [0, 40, 47], "review": 0, "glue": [0, 40, 49], "sst2": [0, 40, 47, 49], "cola": [0, 40, 49], "colorect": [0, 42], "histologi": [0, 42], "resisc45": [0, 44], "cdd": 0, "cesm": 0, "squad": 0, "mvtec": [0, 45], "anomali": [0, 1, 42], "detect": [0, 1, 42], "guid": [1, 36, 41, 42, 50], "walk": [1, 37, 38, 41], "you": [1, 2, 12, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "through": [1, 37, 38, 41], "coupl": [1, 41], "exampl": [1, 12, 15, 33, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49], "show": [1, 33, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49], "approach": [1, 41], "recommend": [1, 43, 44, 47, 48, 49], "hardwar": [1, 41, 47, 48, 49], "precis": [1, 37, 38, 41, 43, 44, 45, 47, 48, 49], "4th": 1, "gen": 1, "xeon": [1, 43, 44, 47, 48, 49], "scalabl": 1, "perform": [1, 2, 34, 37, 38, 41, 43, 44, 45, 47, 48, 49], "processor": [1, 43, 44, 47, 48, 49], "bf16": 1, "1st": 1, "2nd": 1, "3rd": 1, "fp32": [1, 37, 38, 41], "softwar": 1, "linux": 1, "valid": [1, 7, 8, 33, 34, 43, 44, 45, 46, 47, 48, 49], "ubuntu": [1, 42, 50], "20": [1, 42, 45, 46, 48, 50], "04": [1, 42, 50], "22": [1, 37, 38], "lt": 1, "python": [1, 36, 41, 42, 50], "3": [1, 33, 37, 38, 42, 50], "8": [1, 3, 42, 50], "9": [1, 42, 50], "10": [1, 34, 37, 38, 42, 43, 44, 45, 46, 47, 49, 50], "pip": [1, 36, 42, 50], "conda": [1, 42, 50], "virtualenv": [1, 36, 42, 50], "git": [1, 42, 50], "onli": [1, 7, 8, 33, 35, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51], "advanc": 1, "depend": [1, 33, 36, 40, 42, 50], "packag": [1, 40, 42, 50], "apt": [1, 36], "build": 1, "essenti": 1, "python3": [1, 36, 42, 50], "dev": 1, "libgl1": 1, "libglib2": 1, "0": [1, 2, 7, 10, 12, 13, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "creat": [1, 2, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51], "activ": [1, 33, 36, 42, 50], "virtual": [1, 42, 50], "environ": [1, 40, 43, 44, 45, 46, 47, 48, 49], "we": [1, 37, 38, 43, 44, 45, 46, 47, 48, 49], "encourag": 1, "consist": 1, "manag": 1, "There": [1, 45], "ar": [1, 2, 7, 8, 12, 33, 34, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "two": [1, 12, 15, 33, 35, 40, 43, 44, 45, 46, 47, 48, 49, 51], "wai": [1, 33, 45], "do": [1, 35, 45, 46, 48, 51], "p": [1, 35, 37, 38, 39, 40, 42, 45, 50, 51], "tlt_dev_venv": [1, 36], "bin": [1, 36, 42, 50], "b": [1, 45], "Or": [1, 33, 42, 50], "basic": 1, "instruct": [1, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51], "unless": [1, 45], "plan": 1, "make": [1, 35, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 51], "chang": [1, 35, 45, 46, 48, 51], "clone": [1, 42, 50], "repo": [1, 34, 42, 50], "http": [1, 2, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "github": [1, 34, 42, 46, 48, 50], "com": [1, 34, 37, 38, 39, 42, 44, 45, 46, 48, 50], "intelai": [1, 42, 50], "cd": [1, 35, 42, 50, 51], "Then": [1, 42, 46, 48, 50], "either": [1, 33, 36, 40, 41, 47, 49], "an": [1, 2, 6, 9, 10, 12, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "edit": [1, 35, 36, 51], "avoid": [1, 2], "rebuild": 1, "after": [1, 34, 37, 38, 39, 40, 45, 46, 48, 49], "each": [1, 7, 8, 12, 15, 33, 34, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49], "prefer": 1, "wheel": 1, "setup": [1, 36], "py": 1, "bdist_wheel": 1, "dist": 1, "intel_transfer_learning_tool": 1, "4": [1, 3, 33, 37, 38, 40], "py3": 1, "none": [1, 4, 7, 8, 9, 12, 15, 20, 22, 23, 28, 30, 31, 33, 37, 38, 43, 44, 45, 47, 48, 49], "ani": [1, 2, 35, 45, 46, 47, 48, 49, 51], "whl": 1, "addit": [1, 33, 43, 44, 46, 47, 48, 49], "featur": [1, 41, 43, 44, 46, 47, 48, 49], "specif": [1, 2], "For": [1, 2, 7, 8, 12, 15, 34, 36, 37, 38, 45, 46, 47, 48, 49], "distribut": [1, 13, 34], "multinod": [1, 35, 41, 51], "train": [1, 4, 7, 8, 9, 10, 13, 16, 33, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49], "follow": [1, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "librari": [1, 41, 46, 47, 48, 49], "2": [1, 2, 3, 39, 40, 42, 50], "11": 1, "verifi": [1, 35, 51], "your": [1, 2, 35, 37, 38, 41, 42, 43, 44, 45, 50, 51], "wa": [1, 43, 44, 45, 46, 47, 48, 49], "success": 1, "command": [1, 34, 35, 36, 37, 38, 40, 41, 51], "which": [1, 12, 15, 33, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49], "displai": [1, 46, 47, 48, 49], "help": [1, 37, 38, 43, 44, 45, 46, 47, 48, 49], "inform": [1, 33, 34, 37, 38, 41, 43, 44, 46, 47, 48, 49], "about": [1, 33, 34, 43, 44, 46, 47, 48, 49], "tlt": [1, 33, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "prepar": 1, "dataset": [1, 34, 37, 38, 41, 42, 50], "The": [1, 7, 8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51], "can": [1, 7, 8, 12, 15, 26, 28, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50], "from": [1, 9, 10, 12, 13, 15, 16, 30, 33, 34, 36, 37, 38, 41, 42, 43, 44, 47, 49, 50], "exist": [1, 7, 8, 33, 35, 41, 46, 47, 48, 49, 51], "catalog": [1, 9, 10, 13, 16, 33, 34, 43, 44], "custom": [1, 7, 8, 12, 15, 23, 33, 34, 41, 43, 44, 45, 47, 49], "have": [1, 35, 40, 43, 44, 45, 46, 47, 48, 49, 51], "machin": [1, 36, 40, 47, 49], "": [1, 2, 3, 12, 15, 33, 34, 37, 38, 40, 43, 44, 45, 47, 48, 49], "option": [1, 7, 8, 12, 15, 33, 34], "dir": [1, 34, 35, 37, 38, 39, 40, 51], "download": [1, 10, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "storag": [1, 37, 38, 39, 46, 48], "googleapi": [1, 37, 38, 39, 46, 48], "org": [1, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49], "example_imag": [1, 37, 38, 39, 46, 48], "flower_photo": [1, 33, 37, 38, 39, 46, 48], "tgz": [1, 37, 38, 39, 46, 48], "extract": [1, 37, 38, 39, 40, 46, 47, 48, 49], "file": [1, 12, 15, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51], "folder": [1, 7, 8, 12, 15, 34, 37, 38, 39, 42, 43, 44, 46, 48, 50], "wget": [1, 37, 38, 39, 40], "tar": [1, 37, 38, 39, 45], "xvzf": 1, "flow_photo": 1, "should": [1, 7, 8, 12, 15, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 51], "subfold": [1, 7, 8, 33, 39, 46, 48], "daisi": [1, 33, 39, 46, 48], "dandelion": [1, 33, 39, 46, 48], "rose": [1, 33, 39, 46, 48], "sunflow": [1, 33, 39, 46, 48], "tulip": [1, 33, 39, 46, 48], "With": [1, 43, 44, 46, 47, 48, 49], "ai": [1, 2, 41], "model": [1, 7, 8, 12, 15, 37, 38, 39, 40, 41, 42, 50], "bash": [1, 41], "prompt": [1, 35, 41, 51], "call": [1, 35, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 51], "script": [1, 2, 41], "both": [1, 43, 44, 45, 47, 48, 49], "provid": [1, 2, 12, 15, 33, 34, 36, 40, 41, 43, 44, 46, 47, 48, 49], "same": [1, 37, 38, 43, 44, 45, 46, 47, 48, 49], "opportun": 1, "evalu": [1, 4, 34, 37, 38, 39, 40, 41, 46, 47, 48, 49], "optim": [1, 20, 22, 23, 28, 31, 33, 37, 38, 41, 45, 47, 48, 49], "benchmark": [1, 2, 37, 38, 40, 41, 44, 48], "program": [1, 41], "experi": 1, "ll": 1, "need": [1, 33, 36, 37, 38, 46, 47, 49], "knowledg": [1, 41, 43, 44], "choos": [1, 46], "work": [1, 33, 37, 38, 46, 47, 48, 49], "best": [1, 37, 38, 45], "below": [1, 12, 15, 35, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51], "construct": [1, 41], "own": [1, 37, 38, 41, 45], "see": [1, 33, 35, 37, 38, 41, 43, 44, 46, 47, 48, 49, 51], "avail": [1, 33, 34, 37, 38, 43, 44, 45, 46, 47, 48, 49], "more": [1, 12, 15, 37, 38, 40, 43, 44, 46, 47, 48, 49], "detail": [1, 37, 38, 44], "all": [1, 12, 15, 33, 35, 36, 45, 46, 47, 48, 49, 51], "image_classif": [1, 33, 37, 38, 43, 44, 46, 48], "alexnet": [1, 3, 37, 38], "convnext_bas": [1, 3, 37, 38], "convnext_larg": [1, 3, 37, 38], "convnext_smal": [1, 3, 37, 38], "convnext_tini": [1, 3, 37, 38], "densenet121": [1, 3, 37, 38], "densenet161": [1, 3, 37, 38], "densenet169": [1, 3, 37, 38], "densenet201": [1, 3, 37, 38], "efficientnet_b0": [1, 3, 33, 34, 37, 38, 46], "efficientnet_b1": [1, 3, 37, 38], "full": [1, 37, 38, 48], "classifi": [1, 12, 15, 33, 40, 47, 49], "identifi": 1, "differ": [1, 43, 44, 45, 47, 48], "type": [1, 33, 35, 37, 38, 43, 44, 45, 47, 48, 49, 51], "sure": [1, 35, 37, 38, 51], "specifi": [1, 8, 12, 15, 34, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49], "path": [1, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "output": [1, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "point": [1, 37, 38, 43, 44, 46, 47, 48, 49], "earlier": [1, 46, 48], "f": [1, 34, 35, 37, 38, 39, 40, 43, 46, 47, 48, 49, 51], "resnet_v1_50": [1, 3, 37, 38, 39, 43, 44, 48], "tmp": [1, 33, 34, 37, 38, 39, 40], "tf_flower": [1, 33, 39, 48], "epoch": [1, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49], "1": [1, 34, 36, 37, 38, 39, 40], "directori": [1, 7, 8, 12, 15, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "found": [1, 12, 15, 33, 34, 37, 38, 46, 49], "3670": [1, 33, 37, 38], "belong": [1, 33, 37, 38, 39], "5": [1, 33, 37, 38, 39], "class": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49], "save": [1, 34, 37, 38, 41, 42, 43, 44, 45, 46, 48, 50], "complet": [1, 2, 34, 37, 38, 46, 47], "export": [1, 34, 39, 40, 41, 42, 50], "actual": [1, 46, 47, 48, 49], "print": [1, 33, 37, 38, 43, 44, 45, 46, 47, 48, 49], "out": [1, 12, 15, 46, 47, 48, 49], "consol": [1, 37, 38], "A": [1, 7, 8, 12, 13, 15, 16, 33, 34, 37, 38, 40, 45], "number": [1, 7, 12, 34, 43, 44, 46, 47, 48, 49], "also": [1, 37, 38, 43, 44, 45, 46, 47, 48, 49], "evalut": 1, "accuraci": [1, 2, 34, 37, 38, 43, 44, 45, 46, 47, 48, 49], "loss": [1, 20, 22, 23, 28, 31, 33, 34, 37, 38, 43, 44, 46, 47, 48, 49], "metric": [1, 43, 44, 45, 46, 47, 48, 49], "separ": [1, 12, 15, 34, 40, 47, 49], "eval": [1, 37, 38, 39, 40], "quantiz": [1, 37, 38, 41], "document": [1, 33, 34, 40, 41, 43, 44, 45, 46, 47, 48, 49], "refer": [1, 43, 44, 45, 46, 47, 48, 49], "addition": 1, "int8": [1, 37, 38, 41], "improv": [1, 41], "infer": [1, 12, 37, 38, 41, 47, 48, 49], "jupyt": [1, 41, 42, 50], "notebook": [1, 41, 43, 44, 45, 46, 47, 48, 49], "import": [1, 33, 35, 51], "dataset_factori": [1, 33, 43, 44, 45, 46, 47, 48, 49], "model_factori": [1, 33, 43, 44, 45, 46, 47, 48, 49], "util": [1, 43, 44, 45, 46, 47, 48, 49], "frameworktyp": [1, 18, 19, 26, 27, 29, 32, 33, 43, 44], "usecasetyp": [1, 18, 19, 26, 27, 29, 32, 33, 43, 44], "o": [1, 43, 44, 45, 46, 47, 48, 49], "where": [1, 7, 8, 12, 15, 33, 34, 37, 38, 40, 47, 49], "ha": [1, 12, 15, 34, 37, 38, 39, 40, 47, 48, 49], "been": [1, 34, 37, 38, 47, 48, 49], "dataset_dir": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "els": [1, 35, 43, 44, 45, 46, 47, 48, 49, 51], "join": [1, 43, 44, 45, 46, 47, 48, 49], "home": [1, 35, 43, 44, 45, 46, 47, 48, 49, 51], "output_dir": [1, 34, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "get_model": [1, 33, 43, 44, 45, 46, 47, 48, 49], "model_nam": [1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 43, 44, 45, 46, 47, 48, 49], "load": [1, 7, 12, 15, 33, 34, 40, 46, 47, 48, 49], "preprocess": [1, 43, 44, 45, 46, 47, 48, 49], "load_dataset": [1, 33, 44, 45, 46, 47, 48, 49], "use_cas": [1, 18, 19, 26, 27, 29, 32, 33, 43, 44, 45, 46, 47, 48, 49], "image_s": [1, 19, 33, 43, 44, 45, 46, 48], "batch_siz": [1, 34, 43, 44, 45, 46, 47, 48, 49], "32": [1, 34, 43, 44, 45, 46, 47, 48, 49], "shuffle_split": [1, 43, 44, 45, 46, 47, 48, 49], "train_pct": [1, 43, 44, 45, 46, 47, 48, 49], "75": [1, 45, 46, 47, 48, 49], "val_pct": [1, 43, 44, 45, 46, 47, 48, 49], "25": [1, 37, 38, 45, 46, 47, 48, 49], "metric_nam": [1, 49], "metric_valu": [1, 49], "zip": [1, 40, 47, 49], "_model": [1, 49], "metrics_nam": [1, 49], "format": [1, 39, 40, 43, 44, 45, 46, 47, 48, 49], "saved_model_dir": [1, 43, 44, 47, 48, 49], "neural": [1, 34, 37, 38, 41, 45, 47, 48, 49], "compressor": [1, 34, 37, 38, 41, 47, 48, 49], "config": [1, 33, 34, 47, 48, 49], "inc_config_fil": [1, 47, 48, 49], "inc_config": [1, 34, 47, 48, 49], "yaml": [1, 34, 47, 48, 49], "write_inc_config_fil": [1, 47, 48, 49], "512": [1, 37, 38, 43, 44, 46, 47, 48, 49], "overwrit": [1, 47, 48, 49], "true": [1, 7, 8, 9, 10, 12, 13, 15, 16, 33, 34, 43, 44, 45, 46, 47, 48, 49], "accuracy_criterion_rel": [1, 47, 48, 49], "01": [1, 34, 37, 38, 47, 48, 49], "exit_policy_timeout": [1, 47, 48, 49], "exit_policy_max_tri": [1, 47, 48, 49], "tuning_workspac": [1, 47, 48, 49], "nc_workspac": [1, 37, 38, 47, 48, 49], "quantization_output": 1, "quantized_model": [1, 47, 48, 49], "graph": [1, 34, 37, 38], "optimization_output": 1, "optimized_model": 1, "optimize_graph": 1, "develop": [1, 36], "deploy": [1, 41], "sampl": [1, 48], "ve": 1, "present": [1, 35, 51], "how": [1, 35, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51], "execut": [1, 43, 44], "end": [1, 34, 35, 37, 38, 43, 44, 45, 46, 47, 48, 49, 51], "workflow": [1, 37, 38, 41, 43, 44, 45], "tutori": [1, 50], "real": [1, 45], "world": [1, 45], "descript": [1, 43, 44, 45, 46, 47, 48, 49], "demonstr": [1, 40, 41, 45, 46, 48], "fine": [1, 28, 30, 31, 34, 43, 44, 45, 46, 48], "tune": [1, 28, 30, 31, 34, 37, 38, 43, 44, 45, 46, 48], "bert": [1, 3, 40, 47], "binari": [1, 30, 31], "kit": 1, "breast": 1, "cancer": [1, 43], "team": [1, 39, 46, 48], "track": 1, "bug": 1, "enhanc": 1, "request": [1, 33, 45, 46], "issu": [1, 48], "befor": [1, 40], "submit": 1, "suggest": 1, "report": [1, 43, 44], "search": [1, 47, 48, 49], "alreadi": [1, 34, 39, 45, 46, 47, 48, 49], "legal": [1, 41], "disclaim": [1, 41], "trademark": [1, 2, 3], "licens": [1, 41, 47, 49], "intel": [2, 34, 35, 51], "transfer": [2, 26, 35, 36, 51], "learn": [2, 26, 34, 35, 36, 51], "tool": [2, 35, 36, 51], "intend": 2, "platform": [2, 40, 41, 43, 44, 47, 48, 49], "visit": 2, "www": [2, 40, 44, 46, 47, 49], "blog": 2, "commit": 2, "respect": 2, "human": [2, 40, 47, 49], "right": [2, 40, 47, 49], "complic": 2, "abus": 2, "polici": [2, 37, 38, 47, 48, 49], "reflect": 2, "global": 2, "principl": 2, "accordingli": [2, 7, 8], "access": 2, "materi": 2, "agre": 2, "product": 2, "applic": [2, 20, 41, 47, 48, 49], "caus": 2, "contribut": 2, "violat": 2, "internation": 2, "recogn": 2, "under": [2, 35, 45, 51], "apach": 2, "version": 2, "To": [2, 35, 36, 43, 44, 45, 46, 48, 51], "extent": 2, "referenc": 2, "code": [2, 36, 41], "site": 2, "those": [2, 33], "third": [2, 33, 43, 44, 45, 47, 48, 49], "parti": [2, 33], "indic": [2, 12, 15], "data": [2, 7, 8, 12, 15, 33, 34, 39, 40, 43, 44, 45, 46, 47, 48, 49], "doe": [2, 7, 8, 12, 43, 44, 45, 47, 48, 49], "warrant": 2, "qualiti": [2, 45], "By": [2, 43, 44], "term": [2, 47, 49], "associ": [2, 40, 47, 49], "compli": 2, "expressli": 2, "adequaci": 2, "liabl": 2, "error": [2, 35, 48, 51], "omiss": 2, "defect": [2, 45], "relianc": 2, "liabil": 2, "damag": 2, "relat": [2, 41], "other": [2, 3, 36, 37, 38, 43, 44, 45, 47, 48, 49], "brand": [2, 3], "mai": [2, 3, 35, 39, 40, 47, 48, 49, 51], "claim": [2, 3], "properti": [2, 3, 47, 49], "hub": [3, 21, 24, 33, 41, 42, 43, 44, 45, 46, 49, 50], "efficientnetv2": [3, 37, 38], "b0": [3, 37, 38], "b1": [3, 37, 38], "b2": [3, 37, 38], "b3": [3, 37, 38], "efficientnet_b2": [3, 37, 38], "efficientnet_b3": [3, 37, 38], "efficientnet_b4": [3, 37, 38], "efficientnet_b5": [3, 37, 38], "efficientnet_b6": [3, 37, 38], "efficientnet_b7": [3, 37, 38], "googlenet": [3, 37, 38], "inception_v3": [3, 37, 38], "mnasnet0_5": [3, 37, 38], "mnasnet1_0": [3, 37, 38], "mobilenet_v2": [3, 37, 38], "mobilenet_v2_100_224": [3, 37, 38], "mobilenet_v3_larg": [3, 37, 38], "mobilenet_v3_smal": 3, "nasnet_larg": 3, "proxyless_cpu": 3, "regnet_x_16gf": 3, "regnet_x_1_6gf": 3, "regnet_x_32gf": 3, "regnet_x_3_2gf": 3, "regnet_x_400mf": 3, "regnet_x_800mf": 3, "regnet_x_8gf": 3, "regnet_y_16gf": 3, "regnet_y_1_6gf": 3, "regnet_y_32gf": 3, "regnet_y_3_2gf": 3, "regnet_y_400mf": 3, "regnet_y_800mf": 3, "regnet_y_8gf": 3, "resnet101": 3, "resnet152": 3, "resnet18": [3, 45], "resnet18_ssl": 3, "resnet18_swsl": 3, "resnet34": 3, "resnet50": [3, 45], "resnet50_ssl": 3, "resnet50_swsl": 3, "resnet_v2_101": 3, "resnet_v2_50": 3, "resnext101_32x16d_ssl": 3, "resnext101_32x16d_swsl": 3, "resnext101_32x16d_wsl": 3, "resnext101_32x32d_wsl": 3, "resnext101_32x48d_wsl": 3, "resnext101_32x4d_ssl": 3, "resnext101_32x4d_swsl": 3, "resnext101_32x8d": 3, "resnext101_32x8d_ssl": 3, "resnext101_32x8d_swsl": 3, "resnext101_32x8d_wsl": 3, "resnext50_32x4d": 3, "resnext50_32x4d_ssl": 3, "resnext50_32x4d_swsl": 3, "shufflenet_v2_x0_5": 3, "shufflenet_v2_x1_0": 3, "vgg11": 3, "vgg11_bn": 3, "vgg13": 3, "vgg13_bn": 3, "vgg16": 3, "vgg16_bn": 3, "vgg19": 3, "vgg19_bn": 3, "vit_b_16": 3, "vit_b_32": 3, "vit_l_16": 3, "vit_l_32": 3, "wide_resnet101_2": 3, "wide_resnet50_2": 3, "convnextbas": 3, "kera": [3, 20, 33, 48], "convnextlarg": 3, "convnextsmal": 3, "convnexttini": 3, "convnextxlarg": 3, "efficientnetv2b0": 3, "efficientnetv2b1": 3, "efficientnetv2b2": 3, "efficientnetv2b3": 3, "efficientnetv2l": 3, "efficientnetv2m": 3, "inceptionresnetv2": 3, "inceptionv3": 3, "mobilenet": 3, "mobilenetv2": 3, "nasnetlarg": 3, "nasnetmobil": 3, "resnet101v2": 3, "resnet152v2": 3, "resnet50v2": 3, "xception": 3, "base": [3, 4, 5, 6, 11, 14, 17, 18, 19, 26, 27, 32, 35, 43, 44, 45, 46, 47, 48, 49, 51], "uncas": [3, 40], "larg": [3, 40, 41, 45, 46, 48], "clinic": 3, "distilbert": 3, "googl": [3, 40, 49], "bert_uncased_l": [3, 40, 49], "10_h": [3, 40], "128_a": [3, 49], "256_a": [3, 40], "512_a": 3, "768_a": 3, "12": [3, 37, 38, 42, 50], "12_h": 3, "2_h": [3, 49], "4_h": 3, "6_h": 3, "8_h": 3, "dataset_nam": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 33, 34, 39, 40, 43, 46, 47, 48, 49], "dataset_catalog": [4, 5, 6, 11, 14, 17, 33, 34, 43, 46, 47, 48, 49], "abstract": [4, 26], "__init__": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "constructor": [4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 49], "attribut": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "repres": [5, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 43, 44, 46, 47, 48, 49], "num_work": [7, 10, 12, 13], "shuffle_fil": [7, 8, 9, 10, 12, 13, 15, 16, 47, 49], "note": [7, 8, 12, 15, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51], "expect": [7, 8, 12, 15, 33, 39, 40, 47, 49], "organ": [7, 8, 33, 39, 46, 48], "contain": [7, 8, 12, 15, 33, 34, 39, 43, 44, 46, 48], "jpg": [7, 8, 33, 39, 45, 46, 48], "label": [7, 8, 12, 15, 33, 39, 40, 45, 46, 47, 48, 49], "class_a": [7, 8, 12, 15, 33], "class_b": [7, 8, 12, 15, 33], "class_c": [7, 8, 33], "user": [7, 8, 33, 43, 44, 45], "defin": [7, 8, 42, 45, 47, 48, 49, 50], "split": [7, 8, 9, 10, 13, 16, 33, 41, 43, 44, 45, 46, 47, 48, 49], "test": [7, 8, 33, 35, 36, 43, 44, 46, 47, 48, 49, 51], "subset": [7, 8, 43, 44, 45, 46, 47, 48, 49], "arrang": [7, 8, 45, 46], "accept": [7, 8, 45], "paramet": [7, 8, 12, 15, 33], "str": [7, 8, 12, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49], "locat": [7, 8, 33, 34, 35, 36, 37, 38, 40, 44, 45, 51], "It": [7, 8, 37, 38, 40, 43, 44, 45, 47, 48, 49], "subdirectori": [7, 8, 46, 48], "If": [7, 8, 12, 15, 33, 34, 35, 36, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "given": [7, 8, 12, 15, 33, 34, 35, 45, 46, 51], "int": [7, 8, 12, 15, 19, 43, 44, 45, 46, 47, 48, 49], "process": [7, 34, 40, 41, 47, 48, 49], "default": [7, 8, 12, 15, 33, 34, 35, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "bool": [7, 8, 12, 15, 19, 33, 34, 43, 44, 45, 46, 47, 48, 49], "whether": [7, 8, 12, 15, 45], "shuffl": [7, 8, 12, 15, 45], "rais": [7, 8, 12, 15, 33], "filenotfounderror": [7, 8, 12, 15], "color_mod": 8, "rgb": [8, 46], "seed": [8, 9, 15, 45], "kwarg": [8, 9, 10, 15, 16, 20, 21, 22, 23, 24, 25, 28, 30, 31, 33], "color": [8, 45, 46, 48], "mode": [8, 34, 37, 38], "greyscal": 8, "rgba": 8, "random": [8, 15, 45], "as_supervis": 9, "csv_file_nam": [12, 15, 47, 49], "class_nam": [12, 15, 33, 34, 43, 44, 45, 46, 47, 48, 49], "column_nam": [12, 47], "label_map_func": [12, 15, 49], "callabl": [12, 15], "label_col": 12, "delimit": [12, 15, 34, 40, 47, 49], "header": [12, 15, 47, 49], "fals": [12, 13, 15, 33, 43, 44, 45, 46, 47, 48, 49], "select_col": [12, 15, 47, 49], "exclude_col": [12, 15, 47, 49], "transform": [12, 15], "csv": [12, 15, 33, 34, 40, 47, 49], "column": [12, 15, 33, 40, 47, 49], "first": [12, 15, 35, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51], "second": [12, 15, 34, 35, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51], "sentenc": [12, 15, 33, 40, 47, 49], "comma": [12, 15, 34, 40, 47, 49], "valu": [12, 15, 34, 36, 37, 38, 40, 47, 49], "look": [12, 15, 47, 49], "similar": [12, 15, 47, 49], "snippet": [12, 15], "filter": [12, 15, 33, 34, 40, 45, 47, 49], "pars": [12, 15, 47, 49], "order": [12, 15], "must": [12, 45], "exactli": 12, "one": [12, 15, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49], "posit": 12, "correspond": 12, "argument": [12, 33, 36, 40, 43, 44], "assign": 12, "text_1": 12, "text_2": 12, "rest": [12, 46, 48], "function": [12, 15, 33, 40, 43, 44, 45, 46, 47, 48, 49], "map": [12, 15, 40, 46, 47, 48, 49], "across": [12, 15, 41], "appli": [12, 15, 34, 37, 38, 43, 44, 45, 46, 47, 48, 49], "element": [12, 15], "string": [12, 15, 34, 40, 46, 47, 49], "instead": [12, 15, 34, 46, 47, 48, 49], "numer": [12, 15, 40, 46, 47, 48, 49], "index": [12, 47, 49], "integ": [12, 43, 44, 46, 47, 48, 49], "everi": 12, "uniqu": 12, "start": [12, 36, 37, 38, 41, 42, 45, 50], "charact": [12, 15, 40, 49], "row": [12, 15, 47, 49], "boolean": [12, 15, 33, 34], "line": [12, 15, 41, 46, 48], "skip": [12, 15, 42, 46, 47, 48, 49, 50], "sort": [12, 15, 33], "At": [12, 15], "most": [12, 15], "exclud": [12, 15], "worker": 12, "pass": [12, 36, 37, 38, 40, 45, 46, 47, 48, 49], "dataload": 12, "typeerror": [12, 15], "valueerror": [12, 15], "empti": [12, 15, 42, 50], "mismatch": 12, "than": 12, "field": 15, "do_fine_tun": 19, "dropout_layer_r": [19, 29], "pretrain": [19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 41, 45, 46, 47, 48, 49], "multi": [28, 40, 43, 44, 46, 48], "float": [29, 43, 44, 45, 47, 48, 49], "simplest": 33, "get_dataset": [33, 43, 46, 47, 48, 49], "themselv": 33, "tfcustomtextclassificationdataset": 33, "task": [33, 40, 47], "purpos": [33, 46, 47, 48, 49], "keyword": 33, "being": [33, 34, 39, 40, 45, 47, 49], "return": [33, 43, 44, 45, 46, 47, 48, 49], "notimplementederror": 33, "support": [33, 34, 40, 41, 43, 44, 45, 46, 47, 48, 49], "tf_dataset": [33, 34, 43, 48, 49], "cv": [33, 34], "huggingfac": [33, 34], "nlp": 33, "yet": [33, 46, 48], "rare": 33, "interact": 33, "directli": 33, "discov": 33, "while": [33, 34, 36, 43, 44, 45, 46, 47, 48, 49], "load_model": [33, 43, 44, 45], "object": [33, 43, 44, 45, 46, 47, 48, 49], "memori": [33, 43, 44, 45, 47, 48, 49], "discoveri": 33, "inspect": 33, "get_supported_model": 33, "print_supported_model": [33, 43, 44, 46, 47, 48, 49], "model_hub": 33, "saved_model": [33, 34, 37, 38, 43, 44, 46, 47, 48, 49], "pb": [33, 34, 37, 38, 43, 44, 46, 47, 48, 49], "pt": [33, 34], "origin": [33, 43, 44, 45, 47, 49], "configur": [33, 40, 47, 48, 49], "set": [33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50], "adam": 33, "torch": [33, 45, 46], "nn": 33, "crossentropyloss": 33, "initi": 33, "further": [33, 41], "when": [33, 34, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49], "thei": [33, 35, 51], "amsgrad": 33, "want": [33, 35, 46, 47, 48, 49, 51], "sequenti": [33, 37, 38], "input": [33, 43, 44, 45, 46, 47, 48, 49], "layer": [33, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49], "dens": [33, 37, 38, 43, 44, 46, 47, 48, 49], "my_model": 33, "shape": [33, 37, 38], "relu": 33, "softmax": 33, "224": [33, 45, 46], "dictionari": 33, "leaf": 33, "item": 33, "nameerror": 33, "unknown": 33, "miss": 33, "verbos": [33, 34, 43, 44, 45, 46, 47, 48, 49], "markdown": 33, "categor": 33, "result": [33, 35, 37, 38, 46, 47, 48, 49, 51], "includ": [33, 47], "tabl": 33, "updat": [33, 47, 49], "Not": 33, "compat": 33, "arg": 34, "model_dir": 34, "requir": [34, 36, 41, 42, 43, 44, 50], "reload": 34, "time": [34, 37, 38, 41, 43, 44, 46, 47, 48, 49], "inc": [34, 47, 48, 49], "blob": 34, "master": 34, "doc": [34, 36], "md": 34, "gener": [34, 36, 41, 43, 44, 45, 46, 47, 48, 49], "batch": [34, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49], "size": [34, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49], "writeabl": [34, 43, 44, 45, 46, 47, 48, 49], "write": [34, 35, 47, 48, 49, 51], "temporari": 34, "delet": 34, "previous": [34, 45], "try": [34, 36], "get": [34, 35, 36, 41, 42, 50, 51], "dataset_fil": [34, 40], "singl": [34, 45, 47, 49], "extra": 34, "post": [34, 37, 38, 47, 49], "tree": 34, "dure": [34, 40, 45], "criterion": [34, 37, 38, 47, 48, 49], "accuracy_criterion": 34, "rel": [34, 47, 48, 49], "allow": [34, 40, 43, 44, 46, 47, 48, 49], "timeout": [34, 37, 38, 47, 48, 49], "finish": [34, 47, 48, 49], "max": [34, 37, 38, 45, 47, 48, 49], "trial": [34, 37, 38, 47, 48, 49], "reach": [34, 37, 38, 43, 44, 46, 47, 48, 49], "mean": [34, 45, 46, 47, 48, 49], "phase": [34, 47, 48, 49], "stop": [34, 43, 44, 46, 47, 48, 49], "met": [34, 47, 48, 49], "max_trial": [34, 47, 48, 49], "maximum": [34, 47, 49], "50": [34, 37, 38, 43, 44], "workspac": [34, 47, 48, 49], "deep": [34, 40, 41], "log": 34, "checkpoint": [34, 37, 38, 41, 45, 46, 47, 48, 49], "etc": [34, 43, 44, 46, 47, 48, 49], "init": 34, "init_checkpoint": 34, "weight": [34, 43, 44, 45, 46, 47, 48, 49], "resum": [34, 41], "latest": [34, 43, 44, 46, 47, 48, 49], "add": [34, 43, 44, 46, 48], "aug": 34, "add_aug": [34, 43, 44, 45, 46, 48], "choic": 34, "augment": [34, 43, 44, 45, 46, 48], "hvflip": [34, 43, 44, 48], "hflip": [34, 43, 44, 45, 46, 48], "vflip": [34, 43, 44, 48], "rotat": [34, 43, 44, 45, 46, 48], "zoom": [34, 43, 44, 48], "ipex_optim": [34, 47], "ipex": [34, 47], "extens": [34, 41, 47], "d": [34, 40], "trigger": 34, "job": [34, 40], "nnode": [34, 40], "node": [34, 35, 40, 51], "run": [34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51], "nproc_per_nod": [34, 40], "nproc": 34, "per": [34, 40], "hostfil": [34, 40], "earli": [34, 43, 44, 46, 47, 48, 49], "early_stop": [34, 43, 44, 46, 47, 48, 49], "enabl": [34, 43, 44, 46, 47, 48, 49], "converg": [34, 43, 44, 46, 47, 48, 49], "lr": 34, "decai": [34, 43, 44, 46, 47, 48, 49], "lr_decai": [34, 43, 44, 46, 47, 48, 49], "do_ev": [34, 43, 44, 46, 47, 48, 49], "rate": [34, 43, 44, 46, 47, 48, 49], "horovod": 34, "use_horovod": 34, "mpi": 34, "here": [35, 37, 38, 45, 51], "particip": [35, 51], "oneapi": [35, 51], "toolkit": [35, 43, 44, 45, 51], "instal": [35, 36, 41, 51], "opt": [35, 51], "kei": [35, 51], "pair": [35, 51], "check": [35, 40, 41, 45, 51], "id_rsa": [35, 51], "pub": [35, 51], "don": [35, 47, 51], "t": [35, 40, 43, 46, 47, 48, 49, 51], "passphras": [35, 51], "remov": [35, 51], "keygen": [35, 51], "old_passphras": [35, 51], "n": [35, 42, 43, 45, 46, 47, 48, 49, 50, 51], "new_passphras": [35, 51], "keyfil": [35, 51], "replac": [35, 40, 51], "blank": [35, 51], "space": [35, 51], "give": [35, 46, 48, 51], "permiss": [35, 51], "chmod": [35, 51], "u": [35, 46, 48, 51], "x": [35, 43, 44, 49, 51], "rsa": [35, 51], "ask": [35, 51], "what": [35, 45, 51], "press": [35, 51], "enter": [35, 51], "just": [35, 43, 44, 45, 46, 47, 48, 49, 51], "open": [35, 41, 43, 44, 46, 47, 48, 49, 51], "editor": [35, 51], "like": [35, 37, 38, 45, 47, 49, 51], "vi": [35, 51], "vim": [35, 51], "nano": [35, 51], "pico": [35, 51], "sai": [35, 51], "your_idsid": [35, 51], "hostnam": [35, 36, 51], "domain": [35, 43, 44, 51], "omit": [35, 51], "idsid": [35, 51], "authorized_kei": [35, 51], "past": [35, 42, 50, 51], "entir": [35, 51], "AND": [35, 51], "read": [35, 47, 48, 49, 51], "yourself": [35, 51], "anyon": [35, 51], "600": [35, 51], "file1": [35, 51], "file2": [35, 51], "file3": [35, 51], "ip_or_hostnam": [35, 51], "target": [35, 51], "system": [35, 41, 42, 47, 50, 51], "workload": [35, 51], "local": [35, 36, 45, 47, 51], "content": [35, 46, 47, 49, 51], "insid": [35, 42, 50, 51], "well": [35, 41, 47, 49, 51], "its": [36, 41], "describ": 36, "root": [36, 45], "project": 36, "m": [36, 37, 38, 43], "pandoc": 36, "few": 36, "sudo": 36, "r": [36, 40, 42, 43, 47, 48, 49, 50], "txt": [36, 42, 46, 48, 50], "navig": [36, 42, 50], "doctest": 36, "ensur": [36, 40, 46, 48], "within": [36, 45, 47, 48, 49], "produc": [36, 45], "similiar": 36, "summari": [36, 46, 47], "6": 36, "failur": 36, "cleanup": 36, "succeed": 36, "final": [36, 41], "html": [36, 46], "clean": 36, "_build": 36, "server": [36, 42, 50], "view": [36, 42, 45, 50], "serv": [36, 43, 44, 46, 47, 48, 49], "127": 36, "port": [36, 42, 50], "9999": 36, "anoth": 36, "pleas": [36, 47, 49], "forward": 36, "appropri": [36, 43, 44], "listen_ip": 36, "listen_port": 36, "host": 36, "listen": 36, "now": [36, 45], "concept": [37, 38], "flag": [37, 38], "limit": [37, 38], "particular": [37, 38], "mkdir": [37, 38, 39, 40, 42, 50], "xzf": [37, 38, 39], "c": [37, 38, 39, 43, 46, 49], "readi": [37, 38, 43, 44, 48, 49], "In": [37, 38, 40, 43, 44, 45, 46, 47, 48, 49], "resnet50v1": [37, 38], "_________________________________________________________________": [37, 38], "param": [37, 38], "keras_lay": [37, 38], "keraslay": [37, 38], "2048": [37, 38], "23561152": [37, 38], "10245": [37, 38], "total": [37, 38], "23": [37, 38], "571": [37, 38], "397": [37, 38], "trainabl": [37, 38, 41], "245": [37, 38], "non": [37, 38, 45], "561": [37, 38], "152": [37, 38], "resnet_v1_50_checkpoint": [37, 38], "86": [37, 38], "24": [37, 38], "248m": [37, 38], "step": [37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "4600": [37, 38], "acc": [37, 38], "8438": [37, 38], "toward": [37, 38], "along": [37, 38, 47, 49], "2022": [37, 38], "06": [37, 38], "28": [37, 38], "info": [37, 38, 43, 46, 47, 48, 49], "latenc": [37, 38], "031": [37, 38], "throughput": [37, 38], "329": [37, 38], "878": [37, 38], "sec": [37, 38], "exit": [37, 38, 47, 48, 49], "58": [37, 38], "mix": [37, 38, 41, 43, 44, 45, 47, 48, 49], "statist": [37, 38], "op": [37, 38], "conv2d": [37, 38], "53": [37, 38], "matmul": [37, 38], "maxpool": [37, 38], "quantizev2": [37, 38], "dequant": [37, 38], "elaps": [37, 38], "32164": [37, 38], "27": [37, 38], "26": [37, 38], "13921": [37, 38], "64": [37, 38, 45], "9008": [37, 38], "9022": [37, 38], "durat": [37, 38], "13": [37, 38], "9226": [37, 38], "17": [37, 38], "3321": [37, 38], "baselin": [37, 38, 48], "histori": [37, 38, 43, 44, 46, 47, 48, 49], "snapshot": [37, 38], "meet": [37, 38, 40, 47, 49], "goal": [37, 38, 45], "savedmodel": [37, 38], "written": [37, 38, 47, 48, 49], "again": [37, 38, 48], "compar": [37, 38, 48], "33": [37, 38], "946": [37, 38], "1056": [37, 38], "940": [37, 38], "altern": [37, 38], "done": [37, 38, 46, 47, 48], "part": [37, 38, 46, 48], "flow": [37, 38, 41], "so": [37, 38, 47, 48], "51": [37, 38], "21": [37, 38], "photo": 39, "vari": [39, 40], "sinc": [39, 40, 46, 48], "onlin": [39, 46, 48], "tfflower": [39, 46, 48], "author": [39, 40, 43, 44, 46, 47, 48, 49], "titl": [39, 40, 43, 44, 45, 46, 47, 48, 49], "month": [39, 40, 44, 46, 47, 48, 49], "jan": [39, 46, 48], "year": [39, 40, 43, 44, 46, 47, 48, 49], "2019": [39, 40, 45, 46, 48], "url": [39, 40, 42, 44, 46, 47, 48, 49, 50], "although": 40, "api": [40, 41, 42], "flexibl": 40, "translat": [40, 47, 49], "tab": [40, 47, 49], "messag": [40, 47, 49], "ham": [40, 47, 49], "mesag": [40, 47, 49], "archiv": [40, 47, 49], "ic": [40, 47, 49], "uci": [40, 47, 49], "edu": [40, 46, 47, 49], "ml": [40, 47, 49], "databas": [40, 47, 49], "00228": [40, 47, 49], "smsspamcollect": [40, 47, 49], "unzip": [40, 44], "copi": [40, 42, 50], "smsspamcollection_numer": 40, "cp": 40, "sed": 40, "g": [40, 43], "our": [40, 43, 44, 45, 46, 47, 48, 49], "google_bert_uncased_l": 40, "imdb_review": [40, 49], "level": [40, 49], "sentiment": [40, 47, 49], "analysi": [40, 43, 45, 47, 49], "tweet_ev": [40, 47], "ag_new": [40, 47], "up": [40, 41, 43, 44, 45, 46, 47, 48, 49], "prerequisit": 40, "successfulli": 40, "saniti": [40, 45], "inproceed": [40, 47, 49], "maa": [40, 47, 49], "etal": [40, 47, 49], "2011": [40, 47, 49], "acl": [40, 47, 49], "hlt2011": [40, 47, 49], "andrew": [40, 47, 49], "l": [40, 43, 46, 47, 48, 49], "dali": [40, 47, 49], "raymond": [40, 47, 49], "e": [40, 47, 49], "pham": [40, 47, 49], "peter": [40, 47, 49], "huang": [40, 47, 49], "dan": [40, 47, 49], "ng": [40, 47, 49], "y": [40, 43, 44, 47, 49], "pott": [40, 47, 49], "christoph": [40, 47, 49], "word": [40, 47, 49], "vector": [40, 43, 44, 47, 49], "booktitl": [40, 47, 49], "proceed": [40, 44, 47, 49], "49th": [40, 47, 49], "annual": [40, 47, 49], "comput": [40, 45, 47, 49], "linguist": [40, 47, 49], "languag": [40, 47, 49], "technologi": [40, 47, 49], "june": [40, 47, 49], "address": [40, 47, 48, 49], "portland": [40, 47, 49], "oregon": [40, 47, 49], "usa": [40, 47, 49], "publish": [40, 43, 44, 47, 49], "page": [40, 43, 44, 47, 49], "142": [40, 47, 49], "150": [40, 47, 49], "aclweb": [40, 47, 49], "anthologi": [40, 47, 49], "p11": [40, 47, 49], "1015": [40, 47, 49], "wang2019glu": 40, "natur": [40, 43], "understand": 40, "wang": 40, "alex": [40, 46], "singh": 40, "amanpreet": 40, "michael": [40, 45], "julian": 40, "hill": 40, "felix": 40, "levi": 40, "omer": 40, "bowman": 40, "samuel": 40, "iclr": 40, "misc": [40, 47, 49], "misc_sms_spam_collection_228": [40, 47, 49], "almeida": [40, 47, 49], "tiago": [40, 47, 49], "2012": [40, 47, 49], "howpublish": [40, 47, 49], "socher": 40, "2013": 40, "recurs": 40, "semant": [40, 47], "composition": 40, "over": [40, 41, 47, 48, 49], "treebank": 40, "richard": 40, "perelygin": 40, "wu": 40, "jean": 40, "chuang": 40, "jason": 40, "man": 40, "confer": [40, 45, 47, 49], "empir": 40, "oct": [40, 44], "seattl": 40, "washington": 40, "d13": 40, "1170": 40, "1631": 40, "1642": 40, "pre": 41, "problem": 41, "smaller": 41, "easier": 41, "faster": [41, 43, 44, 47, 48, 49], "varieti": [41, 46], "leverag": 41, "effici": 41, "100": 41, "automat": [41, 43, 44, 47, 48, 49], "scale": [41, 46, 48], "crop": 41, "predict": [41, 43, 44], "boost": 41, "reduc": 41, "speed": 41, "auto": [41, 43, 44, 47, 48, 49], "select": [41, 43, 44, 45, 46, 48, 49], "usag": 41, "let": [41, 48], "interfac": 41, "cli": 41, "low": [41, 47, 48, 49], "cpu": 41, "overview": 41, "shown": [41, 45, 46, 48], "figur": [41, 45, 46, 48], "medic": 42, "remot": 42, "sens": 42, "scene": 42, "resisc": 42, "e2": [42, 50], "nativ": [42, 47, 50], "transfer_learn": [42, 50], "tlt_repo": [42, 50], "pwd": [42, 50], "venv": [42, 50], "anaconda": [42, 50], "upgrad": [42, 50], "variabl": [42, 46, 47, 48, 49, 50], "subsequ": [42, 46, 50], "reus": [42, 46, 50], "pythonpath": [42, 50], "8888": [42, 50], "termin": [42, 50], "browser": [42, 50], "facilit": [43, 44], "implement": [43, 44, 47, 48, 49], "textur": 43, "sota": [43, 44], "resnet": [43, 44, 45], "v1": [43, 44, 45], "achiev": [43, 44], "numpi": [43, 44, 45, 46, 47, 48, 49], "np": [43, 44, 45, 46, 47, 48, 49], "pickl": [43, 44], "sklearn": [43, 44], "classification_report": [43, 44], "plot_util": [43, 44], "plot_curv": [43, 44], "factori": [43, 44, 45, 46, 47, 48, 49], "tfhub": [43, 44, 46, 47, 48, 49], "ad": [43, 44, 45, 46, 47, 48, 49], "next": [43, 44, 46, 47, 48, 49], "previou": [43, 44, 46, 47, 48, 49], "cell": [43, 44, 45, 46, 47, 48, 49], "later": [43, 44, 46, 47, 48, 49], "continu": [43, 44, 46, 47, 48, 49], "colorectal_histologi": 43, "nclass": [43, 47, 48, 49], "onc": [43, 44, 45, 46, 47, 48, 49], "abov": [43, 44, 45, 46, 47, 48, 49], "resiz": [43, 44, 45, 46, 48, 49], "match": [43, 44, 45, 46, 48, 49], "them": [43, 44, 45, 46, 48, 49], "randomhorizontalandverticalflip": [43, 44, 48], "randomhorizontalflip": [43, 44, 45, 46, 48], "randomverticalflip": [43, 44, 48], "randomrot": [43, 44, 45, 46, 48], "randomzoom": [43, 44, 48], "80": [43, 44], "test_pct": [43, 44, 45], "compil": [43, 44, 46, 48], "paramt": [43, 44, 47, 48, 49], "calcul": [43, 44, 45, 46, 47, 48, 49], "imageclassificationdataset": [43, 44, 46, 47, 48, 49], "initial_checkpoint": [43, 44, 45, 46, 47, 48, 49], "enable_auto_mixed_precis": [43, 44, 48, 49], "16": [43, 44, 46, 47, 48, 49], "bit": [43, 44, 47, 48, 49], "less": [43, 44, 47, 48, 49], "bfloat16": [43, 44, 47, 48, 49], "fourth": [43, 44, 47, 48, 49], "detriment": [43, 44, 47, 48, 49], "disabl": [43, 44, 48, 49], "extra_lay": [43, 44, 46, 47, 48, 49], "insert": [43, 44, 46, 47, 48, 49], "between": [43, 44, 45, 46, 47, 48, 49], "increas": [43, 44, 46, 47, 48, 49], "1024": [43, 44, 46, 47, 48, 49], "neuron": [43, 44, 46, 47, 48, 49], "releas": [43, 44, 45, 46, 47, 48, 49], "date": [43, 44, 45, 46, 47, 48, 49], "current": [43, 44, 45, 46, 47, 48, 49], "val_loss": [43, 44], "val_acc": [43, 44], "_checkpoint": [43, 44], "dump": [43, 44], "hist": 43, "pkl": [43, 44], "wb": [43, 44], "pick": [43, 44, 46, 47, 48, 49], "rb": [43, 44], "use_test_set": [43, 44, 45], "actual_label": [43, 44, 49], "concaten": [43, 44], "_test_subset": [43, 44], "axi": [43, 44, 45, 46, 47, 48, 49], "predicted_label": [43, 44], "articl": [43, 44, 46, 48], "kather2016multi": 43, "kather": 43, "jakob": 43, "nikola": 43, "wei": 43, "cleo": 43, "aron": 43, "bianconi": 43, "francesco": 43, "melcher": 43, "susann": 43, "schad": 43, "lothar": 43, "gaiser": 43, "timo": 43, "marx": 43, "alexand": 43, "z": 43, "llner": 43, "frank": 43, "gerrit": 43, "journal": [43, 44, 45, 46, 48], "scientif": 43, "volum": [43, 44], "27988": 43, "2016": [43, 46, 48], "group": 43, "j": 43, "z\u00f6llner": 43, "zenodo": 43, "doi": [43, 44, 45], "5281": 43, "53169": 43, "rar": 44, "onedr": 44, "live": 44, "authkei": 44, "21ahhnahilzp": 44, "5fixj": 44, "cid": 44, "5c5e061130630a68": 44, "id": [44, 45, 46, 48], "21107": 44, "parid": 44, "21112": 44, "action": 44, "custom_dataset_path": [44, 46, 48], "256": 44, "resisc45_hist": 44, "cheng_2017": 44, "state": 44, "art": 44, "105": 44, "issn": 44, "1558": 44, "2256": 44, "dx": 44, "1109": [44, 45], "jproc": 44, "2017": [44, 47], "2675998": 44, "ieee": [44, 45], "institut": 44, "electr": 44, "electron": 44, "engin": 44, "cheng": 44, "gong": 44, "han": 44, "junwei": 44, "lu": 44, "xiaoqiang": 44, "1865": 44, "1883": 44, "assum": [45, 46, 47, 48, 49], "matplotlib": [45, 46, 48], "pyplot": [45, 46, 48], "plt": [45, 46, 48], "panda": [45, 46, 47, 48, 49], "pd": [45, 46, 47, 48, 49], "pil": [45, 46, 48], "interpolationmod": 45, "io": [45, 46], "bytesio": [45, 46], "file_util": [45, 46, 47, 48, 49], "download_and_extract_tar_fil": [45, 46, 48], "download_fil": [45, 46, 48], "desir": 45, "disk": 45, "anomaly_detect": 45, "path_to_model_fil": 45, "png": 45, "hazelnut": 45, "crack": 45, "good": [45, 47], "hole": 45, "least": 45, "matter": 45, "mani": 45, "long": 45, "would": 45, "layout": [45, 46, 48], "toothbrush": 45, "encod": 45, "bad": 45, "exact": 45, "re": 45, "certain": 45, "percentag": 45, "img_dir": 45, "image_anomaly_detect": 45, "_dataset": 45, "defect_nam": 45, "normal": [45, 46], "_validation_typ": 45, "cutpast": 45, "extractor": 45, "cutpaste_typ": 45, "scar": 45, "3wai": 45, "union": 45, "interpol": 45, "lanczo": 45, "def": [45, 49], "plot_imag": 45, "sup_titl": 45, "figsiz": [45, 46, 48], "18": [45, 46, 48], "14": [45, 46, 48], "subplots_adjust": [45, 46, 48], "hspace": [45, 46, 48], "rang": [45, 46, 48], "min": [45, 46, 48], "30": [45, 46, 48], "subplot": [45, 46, 48], "inp": [45, 46], "transpos": [45, 46], "arrai": [45, 46, 48], "485": [45, 46], "456": [45, 46], "406": [45, 46], "std": [45, 46], "229": [45, 46], "225": [45, 46], "clip": [45, 46], "imshow": [45, 46, 48], "correct_predict": [45, 46, 48], "darkgreen": [45, 46, 48], "crimson": [45, 46, 48], "good_sampl": 45, "black": 45, "fontsiz": [45, 46, 48], "off": [45, 46, 48], "_": [45, 46, 48], "suptitl": [45, 46, 48], "plot": 45, "some": 45, "get_batch": [45, 46, 47, 48, 49], "princip": 45, "compon": 45, "auroc": 45, "area": 45, "roc": 45, "curv": 45, "imageanomalydetectiondataset": 45, "generate_checkpoint": 45, "preserv": 45, "layer_nam": 45, "whose": 45, "pool": 45, "avg": 45, "kernel_s": 45, "kernel": 45, "pca_threshold": 45, "threshold": 45, "pca": 45, "99": 45, "examin": 45, "decid": 45, "list_lay": [45, 46, 47], "layer3": 45, "three": 45, "No": 45, "simpli": 45, "self": 45, "supervis": 45, "network": [45, 49], "siames": 45, "meaning": 45, "represent": 45, "without": 45, "differenti": 45, "regular": 45, "context": 45, "underli": 45, "take": [45, 47, 48, 49], "backbon": 45, "better": 45, "embed": 45, "dl": 45, "fbaipublicfil": 45, "100ep": 45, "256b": 45, "checkpoint_0099": 45, "pth": 45, "strategi": 45, "patch": 45, "techniqu": 45, "preview": 45, "simsiam_imag": 45, "four": 45, "cutpastenorm": 45, "cutpastescar": 45, "cutpaste3wai": 45, "cutpasteunion": 45, "cutpaste_imag": 45, "pca_compon": 45, "trained_model": 45, "feature_dim": 45, "1000": 45, "pred_dim": 45, "250": 45, "path_to_checkpoints_fil": 45, "float32": 45, "sgd": 45, "freeze_resnet": 45, "head_lay": 45, "return_typ": 45, "correct": [45, 46, 48], "green": [45, 46, 48], "incorrect": [45, 46, 48], "red": [45, 46, 48], "sum": 45, "enumer": [45, 47, 49], "len": [45, 49], "paul": 45, "bergmann": 45, "kilian": 45, "batzner": 45, "fauser": 45, "david": [45, 46, 48], "sattlegg": 45, "carsten": 45, "steger": 45, "unsupervis": 45, "intern": [45, 47], "vision": 45, "129": 45, "1038": 45, "1059": 45, "2021": 45, "1007": 45, "s11263": 45, "020": 45, "01400": 45, "cvf": 45, "pattern": 45, "recognit": 45, "cvpr": 45, "9584": 45, "9592": 45, "00982": 45, "classfic": [46, 48], "speci": [46, 48], "similarli": [46, 48], "comment": [46, 48], "download_url": [46, 48], "These": 46, "apppli": 46, "haven": [46, 48], "imagenet": [46, 48], "labels_fil": [46, 48], "imagenetlabel": [46, 48], "labels_file_path": 46, "basenam": [46, 47, 48, 49], "imagenet_label": [46, 48], "readlin": [46, 48], "imagenet_class": [46, 48], "strip": [46, 48], "parenthesi": [46, 48], "modul": [46, 47], "unfrozen": [46, 47], "unfreeze_lay": [46, 47], "unfreez": [46, 47], "lastli": [46, 47, 49], "visual": [46, 48], "wasn": [46, 48], "web": [46, 48], "image_url": [46, 48], "c8": [46, 48], "staticflickr": [46, 48], "7095": [46, 48], "7210797228_c7fe51c3cb_z": [46, 48], "image_shap": [46, 48], "dimens": [46, 48], "255": [46, 48], "channel": 46, "newaxi": [46, 48], "moveaxi": 46, "tensor": [46, 47], "krizhevski": 46, "cifar": 46, "2009": 46, "toronto": 46, "kriz": 46, "openimag": [46, 48], "krasin": [46, 48], "ivan": [46, 48], "duerig": [46, 48], "tom": [46, 48], "alldrin": [46, 48], "neil": [46, 48], "veit": [46, 48], "andrea": [46, 48], "abu": [46, 48], "el": [46, 48], "haija": [46, 48], "sami": [46, 48], "belongi": [46, 48], "serg": [46, 48], "cai": [46, 48], "feng": [46, 48], "zheyun": [46, 48], "ferrari": [46, 48], "vittorio": [46, 48], "gome": [46, 48], "victor": [46, 48], "gupta": [46, 48], "abhinav": [46, 48], "narayanan": [46, 48], "dhyanesh": [46, 48], "sun": [46, 48], "chen": [46, 48], "chechik": [46, 48], "gal": [46, 48], "murphi": [46, 48], "kevin": [46, 48], "intel_extension_for_pytorch": 47, "download_and_extract_zip_fil": [47, 49], "text_classif": [47, 49], "num_class": [47, 49], "condit": [47, 49], "corpor": [47, 49], "modifi": 47, "csv_path": 47, "dataset_url": 47, "sms_spam_collect": [47, 49], "csv_name": 47, "label_nam": 47, "renam": 47, "know": 47, "renamed_csv": 47, "emoji": 47, "emot": 47, "hate": 47, "ironi": 47, "offens": 47, "stance_abort": 47, "stance_ath": 47, "stance_clim": 47, "stance_feminist": 47, "stance_hillari": 47, "use_train": 47, "trainer": 47, "loop": 47, "data_batch": [47, 49], "batch_predict": [47, 49], "frame": [47, 49], "max_item": [47, 49], "score": [47, 49], "prediction_list": [47, 49], "input_id": 47, "get_text": 47, "append": [47, 49], "get_str_label": [47, 49], "break": [47, 49], "result_df": [47, 49], "datafram": [47, 49], "style": [47, 49], "hide": [47, 49], "raw": [47, 49], "movi": [47, 49], "section": [47, 48, 49], "control": [47, 48, 49], "quantization_output_dir": [47, 48, 49], "relative_accuracy_criterion": [47, 48, 49], "15": [47, 48, 49], "recip": [47, 48, 49], "constrain": [47, 48, 49], "sever": [47, 48, 49], "minut": [47, 48, 49], "rosenthal2017semev": 47, "semev": 47, "twitter": 47, "rosenth": 47, "sara": 47, "farra": 47, "noura": 47, "nakov": 47, "preslav": 47, "11th": 47, "workshop": 47, "502": 47, "518": 47, "preprocessor": 48, "downloaded_fil": 48, "get_fil": 48, "norm_imag": 48, "vmin": 48, "vmax": 48, "known": 48, "sometim": 48, "zmq": 48, "zmqerror": 48, "rerun": 48, "zip_file_url": 49, "sms_data_directori": 49, "listdir": 49, "ag_news_subset": 49, "decod": 49, "utf": 49, "argmax": 49, "get_static_valu": 49, "center": 49, "set_table_styl": 49, "selector": 49, "th": 49, "prop": 49, "align": 49, "awesom": 49, "zhang2015characterlevel": 49, "convolut": 49, "xiang": 49, "zhang": 49, "junbo": 49, "zhao": 49, "yann": 49, "lecun": 49, "2015": 49, "eprint": 49, "1509": 49, "01626": 49, "archiveprefix": 49, "arxiv": 49, "primaryclass": 49, "lg": 49}, "objects": {"tlt.datasets.dataset": [[4, 0, 1, "", "BaseDataset"]], "tlt.datasets.dataset.BaseDataset": [[4, 1, 1, "", "__init__"]], "tlt.datasets": [[33, 2, 0, "-", "dataset_factory"]], "tlt.datasets.dataset_factory": [[33, 3, 1, "", "get_dataset"], [33, 3, 1, "", "load_dataset"]], "tlt.datasets.hf_dataset": [[5, 0, 1, "", "HFDataset"]], "tlt.datasets.hf_dataset.HFDataset": [[5, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.image_classification_dataset": [[6, 0, 1, "", "ImageClassificationDataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[6, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset": [[7, 0, 1, "", "PyTorchCustomImageClassificationDataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[7, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset": [[8, 0, 1, "", "TFCustomImageClassificationDataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[8, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.tfds_image_classification_dataset": [[9, 0, 1, "", "TFDSImageClassificationDataset"]], "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset": [[9, 1, 1, "", "__init__"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset": [[10, 0, 1, "", "TorchvisionImageClassificationDataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[10, 1, 1, "", "__init__"]], "tlt.datasets.pytorch_dataset": [[11, 0, 1, "", "PyTorchDataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[11, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset": [[12, 0, 1, "", "HFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[12, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.hf_text_classification_dataset": [[13, 0, 1, "", "HFTextClassificationDataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[13, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.text_classification_dataset": [[14, 0, 1, "", "TextClassificationDataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[14, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset": [[15, 0, 1, "", "TFCustomTextClassificationDataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[15, 1, 1, "", "__init__"]], "tlt.datasets.text_classification.tfds_text_classification_dataset": [[16, 0, 1, "", "TFDSTextClassificationDataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[16, 1, 1, "", "__init__"]], "tlt.datasets.tf_dataset": [[17, 0, 1, "", "TFDataset"]], "tlt.datasets.tf_dataset.TFDataset": [[17, 1, 1, "", "__init__"]], "tlt.models.hf_model": [[18, 0, 1, "", "HFModel"]], "tlt.models.hf_model.HFModel": [[18, 1, 1, "", "__init__"]], "tlt.models.image_classification.image_classification_model": [[19, 0, 1, "", "ImageClassificationModel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[19, 1, 1, "", "__init__"]], "tlt.models.image_classification.keras_image_classification_model": [[20, 0, 1, "", "KerasImageClassificationModel"]], "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel": [[20, 1, 1, "", "__init__"]], "tlt.models.image_classification.pytorch_hub_image_classification_model": [[21, 0, 1, "", "PyTorchHubImageClassificationModel"]], "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel": [[21, 1, 1, "", "__init__"]], "tlt.models.image_classification.pytorch_image_classification_model": [[22, 0, 1, "", "PyTorchImageClassificationModel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[22, 1, 1, "", "__init__"]], "tlt.models.image_classification.tf_image_classification_model": [[23, 0, 1, "", "TFImageClassificationModel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[23, 1, 1, "", "__init__"]], "tlt.models.image_classification.tfhub_image_classification_model": [[24, 0, 1, "", "TFHubImageClassificationModel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[24, 1, 1, "", "__init__"]], "tlt.models.image_classification.torchvision_image_classification_model": [[25, 0, 1, "", "TorchvisionImageClassificationModel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[25, 1, 1, "", "__init__"]], "tlt.models.model": [[26, 0, 1, "", "BaseModel"]], "tlt.models.model.BaseModel": [[26, 1, 1, "", "__init__"]], "tlt.models": [[33, 2, 0, "-", "model_factory"]], "tlt.models.model_factory": [[33, 3, 1, "", "get_model"], [33, 3, 1, "", "get_supported_models"], [33, 3, 1, "", "load_model"], [33, 3, 1, "", "print_supported_models"]], "tlt.models.pytorch_model": [[27, 0, 1, "", "PyTorchModel"]], "tlt.models.pytorch_model.PyTorchModel": [[27, 1, 1, "", "__init__"]], "tlt.models.text_classification.pytorch_hf_text_classification_model": [[28, 0, 1, "", "PyTorchHFTextClassificationModel"]], "tlt.models.text_classification.pytorch_hf_text_classification_model.PyTorchHFTextClassificationModel": [[28, 1, 1, "", "__init__"]], "tlt.models.text_classification.text_classification_model": [[29, 0, 1, "", "TextClassificationModel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[29, 1, 1, "", "__init__"]], "tlt.models.text_classification.tf_hf_text_classification_model": [[30, 0, 1, "", "TFHFTextClassificationModel"]], "tlt.models.text_classification.tf_hf_text_classification_model.TFHFTextClassificationModel": [[30, 1, 1, "", "__init__"]], "tlt.models.text_classification.tf_text_classification_model": [[31, 0, 1, "", "TFTextClassificationModel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[31, 1, 1, "", "__init__"]], "tlt.models.tf_model": [[32, 0, 1, "", "TFModel"]], "tlt.models.tf_model.TFModel": [[32, 1, 1, "", "__init__"]], "tlt-benchmark": [[34, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch-size"], [34, 4, 1, "cmdoption-tlt-benchmark-batch-size", "--batch_size"], [34, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset-dir"], [34, 4, 1, "cmdoption-tlt-benchmark-dataset-dir", "--dataset_dir"], [34, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc-config"], [34, 4, 1, "cmdoption-tlt-benchmark-inc-config", "--inc_config"], [34, 4, 1, "cmdoption-tlt-benchmark-mode", "--mode"], [34, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model-dir"], [34, 4, 1, "cmdoption-tlt-benchmark-model-dir", "--model_dir"], [34, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output-dir"], [34, 4, 1, "cmdoption-tlt-benchmark-output-dir", "--output_dir"]], "tlt-eval": [[34, 4, 1, "cmdoption-tlt-eval-class-names", "--class-names"], [34, 4, 1, "cmdoption-tlt-eval-class-names", "--class_names"], [34, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset-catalog"], [34, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset-dir"], [34, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset-file"], [34, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset-name"], [34, 4, 1, "cmdoption-tlt-eval-dataset-catalog", "--dataset_catalog"], [34, 4, 1, "cmdoption-tlt-eval-dataset-dir", "--dataset_dir"], [34, 4, 1, "cmdoption-tlt-eval-dataset-file", "--dataset_file"], [34, 4, 1, "cmdoption-tlt-eval-dataset-name", "--dataset_name"], [34, 4, 1, "cmdoption-tlt-eval-delimiter", "--delimiter"], [34, 4, 1, "cmdoption-tlt-eval-model-dir", "--model-dir"], [34, 4, 1, "cmdoption-tlt-eval-model-name", "--model-name"], [34, 4, 1, "cmdoption-tlt-eval-model-dir", "--model_dir"], [34, 4, 1, "cmdoption-tlt-eval-model-name", "--model_name"]], "tlt-list-models": [[34, 4, 1, "cmdoption-tlt-list-models-f", "--framework"], [34, 4, 1, "cmdoption-tlt-list-models-use-case", "--use-case"], [34, 4, 1, "cmdoption-tlt-list-models-use-case", "--use_case"], [34, 4, 1, "cmdoption-tlt-list-models-verbose", "--verbose"], [34, 4, 1, "cmdoption-tlt-list-models-f", "-f"]], "tlt-optimize": [[34, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model-dir"], [34, 4, 1, "cmdoption-tlt-optimize-model-dir", "--model_dir"], [34, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output-dir"], [34, 4, 1, "cmdoption-tlt-optimize-output-dir", "--output_dir"]], "tlt-quantize": [[34, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy-criterion"], [34, 4, 1, "cmdoption-tlt-quantize-accuracy-criterion", "--accuracy_criterion"], [34, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch-size"], [34, 4, 1, "cmdoption-tlt-quantize-batch-size", "--batch_size"], [34, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset-dir"], [34, 4, 1, "cmdoption-tlt-quantize-dataset-dir", "--dataset_dir"], [34, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc-config"], [34, 4, 1, "cmdoption-tlt-quantize-inc-config", "--inc_config"], [34, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max-trials"], [34, 4, 1, "cmdoption-tlt-quantize-max-trials", "--max_trials"], [34, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model-dir"], [34, 4, 1, "cmdoption-tlt-quantize-model-dir", "--model_dir"], [34, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output-dir"], [34, 4, 1, "cmdoption-tlt-quantize-output-dir", "--output_dir"], [34, 4, 1, "cmdoption-tlt-quantize-timeout", "--timeout"]], "tlt-train": [[34, 4, 1, "cmdoption-tlt-train-add-aug", "--add-aug"], [34, 4, 1, "cmdoption-tlt-train-add-aug", "--add_aug"], [34, 4, 1, "cmdoption-tlt-train-class-names", "--class-names"], [34, 4, 1, "cmdoption-tlt-train-class-names", "--class_names"], [34, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset-catalog"], [34, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset-dir"], [34, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset-file"], [34, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset-name"], [34, 4, 1, "cmdoption-tlt-train-dataset-catalog", "--dataset_catalog"], [34, 4, 1, "cmdoption-tlt-train-dataset-dir", "--dataset_dir"], [34, 4, 1, "cmdoption-tlt-train-dataset-file", "--dataset_file"], [34, 4, 1, "cmdoption-tlt-train-dataset-name", "--dataset_name"], [34, 4, 1, "cmdoption-tlt-train-delimiter", "--delimiter"], [34, 4, 1, "cmdoption-tlt-train-d", "--distributed"], [34, 4, 1, "cmdoption-tlt-train-early-stopping", "--early-stopping"], [34, 4, 1, "cmdoption-tlt-train-early-stopping", "--early_stopping"], [34, 4, 1, "cmdoption-tlt-train-epochs", "--epochs"], [34, 4, 1, "cmdoption-tlt-train-f", "--framework"], [34, 4, 1, "cmdoption-tlt-train-hostfile", "--hostfile"], [34, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init-checkpoints"], [34, 4, 1, "cmdoption-tlt-train-init-checkpoints", "--init_checkpoints"], [34, 4, 1, "cmdoption-tlt-train-ipex_optimize", "--ipex-optimize"], [34, 4, 1, "cmdoption-tlt-train-ipex_optimize", "--ipex_optimize"], [34, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr-decay"], [34, 4, 1, "cmdoption-tlt-train-lr-decay", "--lr_decay"], [34, 4, 1, "cmdoption-tlt-train-model-name", "--model-name"], [34, 4, 1, "cmdoption-tlt-train-model-name", "--model_name"], [34, 4, 1, "cmdoption-tlt-train-nnodes", "--nnodes"], [34, 4, 1, "cmdoption-tlt-train-nproc_per_node", "--nproc-per-node"], [34, 4, 1, "cmdoption-tlt-train-nproc_per_node", "--nproc_per_node"], [34, 4, 1, "cmdoption-tlt-train-output-dir", "--output-dir"], [34, 4, 1, "cmdoption-tlt-train-output-dir", "--output_dir"], [34, 4, 1, "cmdoption-tlt-train-use-horovod", "--use-horovod"], [34, 4, 1, "cmdoption-tlt-train-use-horovod", "--use_horovod"], [34, 4, 1, "cmdoption-tlt-train-d", "-d"], [34, 4, 1, "cmdoption-tlt-train-f", "-f"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function", "4": "std:cmdoption"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"], "4": ["std", "cmdoption", "program option"]}, "titleterms": {"dataset": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 33, 39, 40, 43, 44, 45, 46, 47, 48, 49], "get": [1, 43, 44, 45, 46, 47, 48, 49], "start": 1, "\u2460": 1, "check": 1, "system": 1, "requir": [1, 45, 46, 47, 48, 49], "\u2461": 1, "instal": [1, 42, 50], "\u2462": 1, "run": [1, 42, 50], "intel": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "transfer": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "learn": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "tool": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "us": [1, 39, 40, 43, 44, 45, 46, 47, 48, 49], "No": 1, "code": 1, "cli": [1, 34, 37, 38, 39, 40], "low": 1, "api": [1, 33, 43, 44, 46, 47, 48, 49], "summari": 1, "next": 1, "step": 1, "support": [1, 3], "legal": 2, "inform": 2, "disclaim": 2, "licens": 2, "model": [3, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49], "imag": [3, 33, 39, 43, 44, 45, 46, 48], "classif": [3, 33, 39, 40, 43, 44, 46, 47, 48, 49], "text": [3, 33, 40, 47, 49], "anomali": [3, 45], "detect": [3, 45], "tlt": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34], "basedataset": 4, "hf_dataset": 5, "hfdataset": 5, "image_classif": [6, 7, 8, 9, 10, 19, 20, 21, 22, 23, 24, 25], "image_classification_dataset": 6, "imageclassificationdataset": 6, "pytorch_custom_image_classification_dataset": 7, "pytorchcustomimageclassificationdataset": 7, "tf_custom_image_classification_dataset": 8, "tfcustomimageclassificationdataset": 8, "tfds_image_classification_dataset": 9, "tfdsimageclassificationdataset": 9, "torchvision_image_classification_dataset": 10, "torchvisionimageclassificationdataset": 10, "pytorch_dataset": 11, "pytorchdataset": 11, "text_classif": [12, 13, 14, 15, 16, 28, 29, 30, 31], "hf_custom_text_classification_dataset": 12, "hfcustomtextclassificationdataset": 12, "hf_text_classification_dataset": 13, "hftextclassificationdataset": 13, "text_classification_dataset": 14, "textclassificationdataset": 14, "tf_custom_text_classification_dataset": 15, "tfcustomtextclassificationdataset": 15, "tfds_text_classification_dataset": 16, "tfdstextclassificationdataset": 16, "tf_dataset": 17, "tfdataset": 17, "hf_model": 18, "hfmodel": 18, "image_classification_model": 19, "imageclassificationmodel": 19, "keras_image_classification_model": 20, "kerasimageclassificationmodel": 20, "pytorch_hub_image_classification_model": 21, "pytorchhubimageclassificationmodel": 21, "pytorch_image_classification_model": 22, "pytorchimageclassificationmodel": 22, "tf_image_classification_model": 23, "tfimageclassificationmodel": 23, "tfhub_image_classification_model": 24, "tfhubimageclassificationmodel": 24, "torchvision_image_classification_model": 25, "torchvisionimageclassificationmodel": 25, "basemodel": 26, "pytorch_model": 27, "pytorchmodel": 27, "pytorch_hf_text_classification_model": 28, "pytorchhftextclassificationmodel": 28, "text_classification_model": 29, "textclassificationmodel": 29, "tf_hf_text_classification_model": 30, "tfhftextclassificationmodel": 30, "tf_text_classification_model": 31, "tftextclassificationmodel": 31, "tf_model": 32, "tfmodel": 32, "refer": [33, 34], "factori": 33, "method": [33, 45], "class": 33, "base": 33, "benchmark": 34, "eval": 34, "list": 34, "framework": 34, "use_cas": 34, "optim": 34, "quantiz": [34, 47, 48, 49], "train": [34, 35, 45, 48, 51], "distribut": [35, 40, 51], "prerequisit": [35, 51], "passwordless": [35, 51], "ssh": [35, 51], "setup": [35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "build": 36, "document": 36, "sphinx": 36, "exampl": [37, 38, 39, 40, 42], "your": [39, 40, 46, 47, 48, 49], "own": [39, 40, 46, 47, 48, 49], "from": [39, 40, 45, 46, 48], "tfd": [39, 40, 49], "catalog": [39, 40, 46, 47, 48, 49], "citat": [39, 40, 43, 44, 45, 46, 47, 48, 49], "fine": [40, 47, 49], "tune": [40, 47, 49], "hug": 40, "face": 40, "how": 41, "work": 41, "notebook": [42, 50], "tutori": 42, "end": 42, "pipelin": 42, "environ": [42, 50], "medic": 43, "colorect": 43, "histologi": 43, "tensorflow": [43, 44, 48, 49], "1": [43, 44, 45, 46, 47, 48, 49], "import": [43, 44, 45, 46, 47, 48, 49], "depend": [43, 44, 45, 46, 47, 48, 49], "paramet": [43, 44, 45, 46, 47, 48, 49], "2": [43, 44, 45, 46, 47, 48, 49], "option": [43, 44, 45, 46, 47, 48, 49], "A": [43, 44, 46, 47, 48, 49], "load": [43, 44, 45], "b": [43, 44, 46, 47, 48, 49], "pretrain": [43, 44], "checkpoint": [43, 44], "3": [43, 44, 45, 46, 47, 48, 49], "4": [43, 44, 45, 46, 47, 48, 49], "prepar": [43, 44, 45, 46, 47, 48, 49], "5": [43, 44, 45, 46, 47, 48, 49], "6": [43, 44, 45, 46, 47, 48, 49], "evalu": [43, 44, 45], "7": [43, 44, 45, 46, 47, 48, 49], "export": [43, 44, 45, 46, 47, 48, 49], "8": [43, 44, 45, 46, 47, 48, 49], "infer": [43, 44], "remot": 44, "sens": 44, "scene": 44, "resisc": 44, "pytorch": [45, 46, 47], "categori": 45, "folder": 45, "test": 45, "subfold": 45, "visual": 45, "sampl": 45, "argument": [45, 46, 47, 48, 49], "featur": 45, "extract": 45, "The": 45, "simsiam": 45, "twocroptransform": 45, "cut": 45, "past": 45, "transform": 45, "predict": [45, 46, 47, 48, 49], "": 46, "torchvis": 46, "origin": [46, 48], "custom": [46, 48], "singl": [46, 48], "huggingfac": 47, "save": [47, 49], "9": 48, "post": 48}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Datasets": [[0, "datasets"], [2, "datasets"], [33, "datasets"]], "Get Started": [[1, "get-started"]], "\u2460 Check System Requirements": [[1, "check-system-requirements"]], "\u2461 Install": [[1, "install"]], "\u2462 Run the Intel Transfer Learning Tool": [[1, "run-the-intel-transfer-learning-tool"]], "Run Using the No-Code CLI": [[1, "run-using-the-no-code-cli"]], "Run Using the Low-Code API": [[1, "run-using-the-low-code-api"]], "Summary and Next Steps": [[1, "summary-and-next-steps"]], "Support": [[1, "support"]], "Legal Information": [[2, "legal-information"]], "Disclaimer": [[2, "disclaimer"]], "License": [[2, "license"]], "Intel\u00ae Transfer Learning Tool Supported Models": [[3, "intel-transfer-learning-tool-supported-models"]], "Image Classification": [[3, "image-classification"], [33, "image-classification"], [33, "id3"]], "Text Classification": [[3, "text-classification"], [33, "text-classification"], [33, "id4"]], "Image Anomaly Detection": [[3, "image-anomaly-detection"]], "tlt.datasets.dataset.BaseDataset": [[4, "tlt-datasets-dataset-basedataset"]], "tlt.datasets.hf_dataset.HFDataset": [[5, "tlt-datasets-hf-dataset-hfdataset"]], "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset": [[6, "tlt-datasets-image-classification-image-classification-dataset-imageclassificationdataset"]], "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset": [[7, "tlt-datasets-image-classification-pytorch-custom-image-classification-dataset-pytorchcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset": [[8, "tlt-datasets-image-classification-tf-custom-image-classification-dataset-tfcustomimageclassificationdataset"]], "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset": [[9, "tlt-datasets-image-classification-tfds-image-classification-dataset-tfdsimageclassificationdataset"]], "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset": [[10, "tlt-datasets-image-classification-torchvision-image-classification-dataset-torchvisionimageclassificationdataset"]], "tlt.datasets.pytorch_dataset.PyTorchDataset": [[11, "tlt-datasets-pytorch-dataset-pytorchdataset"]], "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset": [[12, "tlt-datasets-text-classification-hf-custom-text-classification-dataset-hfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset": [[13, "tlt-datasets-text-classification-hf-text-classification-dataset-hftextclassificationdataset"]], "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset": [[14, "tlt-datasets-text-classification-text-classification-dataset-textclassificationdataset"]], "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset": [[15, "tlt-datasets-text-classification-tf-custom-text-classification-dataset-tfcustomtextclassificationdataset"]], "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset": [[16, "tlt-datasets-text-classification-tfds-text-classification-dataset-tfdstextclassificationdataset"]], "tlt.datasets.tf_dataset.TFDataset": [[17, "tlt-datasets-tf-dataset-tfdataset"]], "tlt.models.hf_model.HFModel": [[18, "tlt-models-hf-model-hfmodel"]], "tlt.models.image_classification.image_classification_model.ImageClassificationModel": [[19, "tlt-models-image-classification-image-classification-model-imageclassificationmodel"]], "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel": [[20, "tlt-models-image-classification-keras-image-classification-model-kerasimageclassificationmodel"]], "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel": [[21, "tlt-models-image-classification-pytorch-hub-image-classification-model-pytorchhubimageclassificationmodel"]], "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel": [[22, "tlt-models-image-classification-pytorch-image-classification-model-pytorchimageclassificationmodel"]], "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel": [[23, "tlt-models-image-classification-tf-image-classification-model-tfimageclassificationmodel"]], "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel": [[24, "tlt-models-image-classification-tfhub-image-classification-model-tfhubimageclassificationmodel"]], "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel": [[25, "tlt-models-image-classification-torchvision-image-classification-model-torchvisionimageclassificationmodel"]], "tlt.models.model.BaseModel": [[26, "tlt-models-model-basemodel"]], "tlt.models.pytorch_model.PyTorchModel": [[27, "tlt-models-pytorch-model-pytorchmodel"]], "tlt.models.text_classification.pytorch_hf_text_classification_model.PyTorchHFTextClassificationModel": [[28, "tlt-models-text-classification-pytorch-hf-text-classification-model-pytorchhftextclassificationmodel"]], "tlt.models.text_classification.text_classification_model.TextClassificationModel": [[29, "tlt-models-text-classification-text-classification-model-textclassificationmodel"]], "tlt.models.text_classification.tf_hf_text_classification_model.TFHFTextClassificationModel": [[30, "tlt-models-text-classification-tf-hf-text-classification-model-tfhftextclassificationmodel"]], "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel": [[31, "tlt-models-text-classification-tf-text-classification-model-tftextclassificationmodel"]], "tlt.models.tf_model.TFModel": [[32, "tlt-models-tf-model-tfmodel"]], "API Reference": [[33, "api-reference"]], "Factory Methods": [[33, "module-tlt.datasets.dataset_factory"], [33, "id1"]], "Class Reference": [[33, "class-reference"], [33, "id2"]], "Base Classes": [[33, "base-classes"], [33, "id5"]], "Models": [[33, "models"]], "CLI Reference": [[34, "cli-reference"]], "tlt": [[34, "tlt"]], "benchmark": [[34, "tlt-benchmark"]], "eval": [[34, "tlt-eval"]], "list": [[34, "tlt-list"]], "frameworks": [[34, "tlt-list-frameworks"]], "models": [[34, "tlt-list-models"]], "use_cases": [[34, "tlt-list-use-cases"]], "optimize": [[34, "tlt-optimize"]], "quantize": [[34, "tlt-quantize"]], "train": [[34, "tlt-train"]], "Distributed Training": [[35, "distributed-training"], [51, "distributed-training"]], "Prerequisites": [[35, "prerequisites"], [51, "prerequisites"]], "Passwordless SSH setup": [[35, "passwordless-ssh-setup"], [51, "passwordless-ssh-setup"]], "Building Documentation": [[36, "building-documentation"]], "Sphinx Documentation": [[36, "sphinx-documentation"]], "Intel\u00ae Transfer Learning Tool CLI Examples": [[37, "intel-transfer-learning-tool-cli-examples"], [38, "intel-transfer-learning-tool-cli-examples"]], "Image Classification Intel\u00ae Transfer Learning Tool CLI Examples": [[39, "image-classification-intel-transfer-learning-tool-cli-examples"]], "Transfer learning using your own dataset": [[39, "transfer-learning-using-your-own-dataset"]], "Transfer learning using a dataset from the TFDS catalog": [[39, "transfer-learning-using-a-dataset-from-the-tfds-catalog"]], "Citations": [[39, "citations"], [40, "citations"], [47, "Citations"], [49, "Citations"]], "Text Classification Intel Transfer Learning Tool CLI Examples": [[40, "text-classification-intel-transfer-learning-tool-cli-examples"]], "Fine tuning using your own dataset": [[40, "fine-tuning-using-your-own-dataset"]], "Fine tuning using a dataset from the TFDS catalog": [[40, "fine-tuning-using-a-dataset-from-the-tfds-catalog"]], "Distributed transfer learning using a dataset from Hugging Face": [[40, "distributed-transfer-learning-using-a-dataset-from-hugging-face"]], "Intel\u00ae Transfer Learning Tool": [[41, "intel-transfer-learning-tool"]], "How the Intel Transfer Learning Tool Works": [[41, "how-the-intel-transfer-learning-tool-works"]], "Example Notebooks": [[42, "example-notebooks"]], "Transfer Learning Tool Tutorial Notebooks": [[42, "id1"]], "Transfer Learning Tool End-to-End Pipelines": [[42, "id2"]], "Environment Setup and Running the Notebooks": [[42, "environment-setup-and-running-the-notebooks"], [50, "environment-setup-and-running-the-notebooks"]], "Install Intel\u00ae Transfer Learning Tool": [[42, "install-intel-transfer-learning-tool"], [50, "install-intel-transfer-learning-tool"]], "Notebook Environment": [[42, "notebook-environment"], [50, "notebook-environment"]], "Medical Imaging Classification (Colorectal histology) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[43, "Medical-Imaging-Classification-(Colorectal-histology)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "1. Import dependencies and setup parameters": [[43, "1.-Import-dependencies-and-setup-parameters"], [44, "1.-Import-dependencies-and-setup-parameters"], [45, "1.-Import-dependencies-and-setup-parameters"], [46, "1.-Import-dependencies-and-setup-parameters"], [47, "1.-Import-dependencies-and-setup-parameters"], [48, "1.-Import-dependencies-and-setup-parameters"], [49, "1.-Import-dependencies-and-setup-parameters"]], "2. Get the model": [[43, "2.-Get-the-model"], [44, "2.-Get-the-model"], [46, "2.-Get-the-model"], [47, "2.-Get-the-model"], [48, "2.-Get-the-model"], [49, "2.-Get-the-model"]], "Option A: Load a model": [[43, "Option-A:-Load-a-model"], [44, "Option-A:-Load-a-model"]], "Option B: Load a pretrained checkpoint": [[43, "Option-B:-Load-a-pretrained-checkpoint"], [44, "Option-B:-Load-a-pretrained-checkpoint"]], "3. Get the dataset": [[43, "3.-Get-the-dataset"], [44, "3.-Get-the-dataset"], [45, "3.-Get-the-dataset"], [46, "3.-Get-the-dataset"], [47, "3.-Get-the-dataset"], [48, "3.-Get-the-dataset"], [49, "3.-Get-the-dataset"]], "4. Prepare the dataset": [[43, "4.-Prepare-the-dataset"], [44, "4.-Prepare-the-dataset"], [45, "4.-Prepare-the-dataset"], [46, "4.-Prepare-the-dataset"], [47, "4.-Prepare-the-dataset"], [48, "4.-Prepare-the-dataset"], [49, "4.-Prepare-the-dataset"]], "5. Transfer Learning": [[43, "5.-Transfer-Learning"], [44, "5.-Transfer-Learning"]], "6. Evaluate": [[43, "6.-Evaluate"], [44, "6.-Evaluate"]], "7. Export": [[43, "7.-Export"], [44, "7.-Export"]], "8. Inference": [[43, "8.-Inference"], [44, "8.-Inference"]], "Dataset Citations": [[43, "Dataset-Citations"], [44, "Dataset-Citations"], [45, "Dataset-Citations"], [46, "Dataset-Citations"], [48, "Dataset-Citations"]], "Remote Sensing Image Scene Classification (Resisc) using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[44, "Remote-Sensing-Image-Scene-Classification-(Resisc)-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Image Anomaly Detection with PyTorch using Intel\u00ae Transfer Learning Tool": [[45, "Image-Anomaly-Detection-with-PyTorch-using-Intel\u00ae-Transfer-Learning-Tool"]], "2. Get or load the model": [[45, "2.-Get-or-load-the-model"]], "Method 1: Category Folders": [[45, "Method-1:-Category-Folders"]], "Method 2: Train & Test Folders with Category Subfolders": [[45, "Method-2:-Train-&-Test-Folders-with-Category-Subfolders"]], "5. Visualize samples from the dataset": [[45, "5.-Visualize-samples-from-the-dataset"]], "6. Training and Evaluation": [[45, "6.-Training-and-Evaluation"]], "Train Arguments": [[45, "Train-Arguments"]], "Required": [[45, "Required"], [46, "Required"], [47, "Required"], [48, "Required"], [49, "Required"]], "Optional": [[45, "Optional"], [46, "Optional"], [47, "Optional"], [48, "Optional"], [49, "Optional"]], "Feature Extraction": [[45, "Feature-Extraction"]], "Optional: The SimSiam TwoCropTransform": [[45, "Optional:-The-SimSiam-TwoCropTransform"]], "Optional: The Cut-paste Transforms": [[45, "Optional:-The-Cut-paste-Transforms"]], "7. Predict": [[45, "7.-Predict"], [46, "7.-Predict"], [48, "7.-Predict"]], "8. Export": [[45, "8.-Export"], [46, "8.-Export"], [48, "8.-Export"]], "Transfer Learning for Image Classification using PyTorch and the Intel\u00ae Transfer Learning Tool API": [[46, "Transfer-Learning-for-Image-Classification-using-PyTorch-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option A: Use your own dataset": [[46, "Option-A:-Use-your-own-dataset"], [47, "Option-A:-Use-your-own-dataset"], [48, "Option-A:-Use-your-own-dataset"], [49, "Option-A:-Use-your-own-dataset"]], "Option B: Use a dataset from the PyTorch\u2019s Torchvision Datasets catalog": [[46, "Option-B:-Use-a-dataset-from-the-PyTorch's-Torchvision-Datasets-catalog"]], "5. Predict using the original model": [[46, "5.-Predict-using-the-original-model"], [48, "5.-Predict-using-the-original-model"]], "6. Transfer Learning": [[46, "6.-Transfer-Learning"], [48, "6.-Transfer-Learning"]], "Arguments": [[46, "Arguments"], [47, "Arguments"], [48, "Arguments"], [49, "Arguments"]], "Custom Single Image Prediction": [[46, "Custom-Single-Image-Prediction"], [48, "Custom-Single-Image-Prediction"]], "Text Classification fine tuning using Pytorch and the Intel\u00ae Transfer Learning Tool API": [[47, "Text-Classification-fine-tuning-using-Pytorch-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use the HuggingFace catalog": [[47, "Option-B:-Use-the-HuggingFace-catalog"]], "5. Fine tuning": [[47, "5.-Fine-tuning"], [49, "5.-Fine-tuning"]], "6. Predict": [[47, "6.-Predict"], [49, "6.-Predict"]], "Predict on Text": [[47, "Predict-on-Text"]], "7. Export the saved model": [[47, "7.-Export-the-saved-model"], [49, "7.-Export-the-saved-model"]], "8. Quantization": [[47, "8.-Quantization"], [49, "8.-Quantization"]], "Transfer Learning for Image Classification using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[48, "Transfer-Learning-for-Image-Classification-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use a dataset from the TensorFlow Datasets catalog": [[48, "Option-B:-Use-a-dataset-from-the-TensorFlow-Datasets-catalog"]], "9. Post-training quantization": [[48, "9.-Post-training-quantization"]], "Text Classification fine tuning using TensorFlow and the Intel\u00ae Transfer Learning Tool API": [[49, "Text-Classification-fine-tuning-using-TensorFlow-and-the-Intel\u00ae-Transfer-Learning-Tool-API"]], "Option B: Use the TFDS catalog": [[49, "Option-B:-Use-the-TFDS-catalog"]]}, "indexentries": {"basedataset (class in tlt.datasets.dataset)": [[4, "tlt.datasets.dataset.BaseDataset"]], "__init__() (tlt.datasets.dataset.basedataset method)": [[4, "tlt.datasets.dataset.BaseDataset.__init__"]], "hfdataset (class in tlt.datasets.hf_dataset)": [[5, "tlt.datasets.hf_dataset.HFDataset"]], "__init__() (tlt.datasets.hf_dataset.hfdataset method)": [[5, "tlt.datasets.hf_dataset.HFDataset.__init__"]], "imageclassificationdataset (class in tlt.datasets.image_classification.image_classification_dataset)": [[6, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.image_classification_dataset.imageclassificationdataset method)": [[6, "tlt.datasets.image_classification.image_classification_dataset.ImageClassificationDataset.__init__"]], "pytorchcustomimageclassificationdataset (class in tlt.datasets.image_classification.pytorch_custom_image_classification_dataset)": [[7, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.pytorchcustomimageclassificationdataset method)": [[7, "tlt.datasets.image_classification.pytorch_custom_image_classification_dataset.PyTorchCustomImageClassificationDataset.__init__"]], "tfcustomimageclassificationdataset (class in tlt.datasets.image_classification.tf_custom_image_classification_dataset)": [[8, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tf_custom_image_classification_dataset.tfcustomimageclassificationdataset method)": [[8, "tlt.datasets.image_classification.tf_custom_image_classification_dataset.TFCustomImageClassificationDataset.__init__"]], "tfdsimageclassificationdataset (class in tlt.datasets.image_classification.tfds_image_classification_dataset)": [[9, "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.tfds_image_classification_dataset.tfdsimageclassificationdataset method)": [[9, "tlt.datasets.image_classification.tfds_image_classification_dataset.TFDSImageClassificationDataset.__init__"]], "torchvisionimageclassificationdataset (class in tlt.datasets.image_classification.torchvision_image_classification_dataset)": [[10, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset"]], "__init__() (tlt.datasets.image_classification.torchvision_image_classification_dataset.torchvisionimageclassificationdataset method)": [[10, "tlt.datasets.image_classification.torchvision_image_classification_dataset.TorchvisionImageClassificationDataset.__init__"]], "pytorchdataset (class in tlt.datasets.pytorch_dataset)": [[11, "tlt.datasets.pytorch_dataset.PyTorchDataset"]], "__init__() (tlt.datasets.pytorch_dataset.pytorchdataset method)": [[11, "tlt.datasets.pytorch_dataset.PyTorchDataset.__init__"]], "hfcustomtextclassificationdataset (class in tlt.datasets.text_classification.hf_custom_text_classification_dataset)": [[12, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_custom_text_classification_dataset.hfcustomtextclassificationdataset method)": [[12, "tlt.datasets.text_classification.hf_custom_text_classification_dataset.HFCustomTextClassificationDataset.__init__"]], "hftextclassificationdataset (class in tlt.datasets.text_classification.hf_text_classification_dataset)": [[13, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.hf_text_classification_dataset.hftextclassificationdataset method)": [[13, "tlt.datasets.text_classification.hf_text_classification_dataset.HFTextClassificationDataset.__init__"]], "textclassificationdataset (class in tlt.datasets.text_classification.text_classification_dataset)": [[14, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.text_classification_dataset.textclassificationdataset method)": [[14, "tlt.datasets.text_classification.text_classification_dataset.TextClassificationDataset.__init__"]], "tfcustomtextclassificationdataset (class in tlt.datasets.text_classification.tf_custom_text_classification_dataset)": [[15, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tf_custom_text_classification_dataset.tfcustomtextclassificationdataset method)": [[15, "tlt.datasets.text_classification.tf_custom_text_classification_dataset.TFCustomTextClassificationDataset.__init__"]], "tfdstextclassificationdataset (class in tlt.datasets.text_classification.tfds_text_classification_dataset)": [[16, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset"]], "__init__() (tlt.datasets.text_classification.tfds_text_classification_dataset.tfdstextclassificationdataset method)": [[16, "tlt.datasets.text_classification.tfds_text_classification_dataset.TFDSTextClassificationDataset.__init__"]], "tfdataset (class in tlt.datasets.tf_dataset)": [[17, "tlt.datasets.tf_dataset.TFDataset"]], "__init__() (tlt.datasets.tf_dataset.tfdataset method)": [[17, "tlt.datasets.tf_dataset.TFDataset.__init__"]], "hfmodel (class in tlt.models.hf_model)": [[18, "tlt.models.hf_model.HFModel"]], "__init__() (tlt.models.hf_model.hfmodel method)": [[18, "tlt.models.hf_model.HFModel.__init__"]], "imageclassificationmodel (class in tlt.models.image_classification.image_classification_model)": [[19, "tlt.models.image_classification.image_classification_model.ImageClassificationModel"]], "__init__() (tlt.models.image_classification.image_classification_model.imageclassificationmodel method)": [[19, "tlt.models.image_classification.image_classification_model.ImageClassificationModel.__init__"]], "kerasimageclassificationmodel (class in tlt.models.image_classification.keras_image_classification_model)": [[20, "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel"]], "__init__() (tlt.models.image_classification.keras_image_classification_model.kerasimageclassificationmodel method)": [[20, "tlt.models.image_classification.keras_image_classification_model.KerasImageClassificationModel.__init__"]], "pytorchhubimageclassificationmodel (class in tlt.models.image_classification.pytorch_hub_image_classification_model)": [[21, "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel"]], "__init__() (tlt.models.image_classification.pytorch_hub_image_classification_model.pytorchhubimageclassificationmodel method)": [[21, "tlt.models.image_classification.pytorch_hub_image_classification_model.PyTorchHubImageClassificationModel.__init__"]], "pytorchimageclassificationmodel (class in tlt.models.image_classification.pytorch_image_classification_model)": [[22, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel"]], "__init__() (tlt.models.image_classification.pytorch_image_classification_model.pytorchimageclassificationmodel method)": [[22, "tlt.models.image_classification.pytorch_image_classification_model.PyTorchImageClassificationModel.__init__"]], "tfimageclassificationmodel (class in tlt.models.image_classification.tf_image_classification_model)": [[23, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel"]], "__init__() (tlt.models.image_classification.tf_image_classification_model.tfimageclassificationmodel method)": [[23, "tlt.models.image_classification.tf_image_classification_model.TFImageClassificationModel.__init__"]], "tfhubimageclassificationmodel (class in tlt.models.image_classification.tfhub_image_classification_model)": [[24, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel"]], "__init__() (tlt.models.image_classification.tfhub_image_classification_model.tfhubimageclassificationmodel method)": [[24, "tlt.models.image_classification.tfhub_image_classification_model.TFHubImageClassificationModel.__init__"]], "torchvisionimageclassificationmodel (class in tlt.models.image_classification.torchvision_image_classification_model)": [[25, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel"]], "__init__() (tlt.models.image_classification.torchvision_image_classification_model.torchvisionimageclassificationmodel method)": [[25, "tlt.models.image_classification.torchvision_image_classification_model.TorchvisionImageClassificationModel.__init__"]], "basemodel (class in tlt.models.model)": [[26, "tlt.models.model.BaseModel"]], "__init__() (tlt.models.model.basemodel method)": [[26, "tlt.models.model.BaseModel.__init__"]], "pytorchmodel (class in tlt.models.pytorch_model)": [[27, "tlt.models.pytorch_model.PyTorchModel"]], "__init__() (tlt.models.pytorch_model.pytorchmodel method)": [[27, "tlt.models.pytorch_model.PyTorchModel.__init__"]], "pytorchhftextclassificationmodel (class in tlt.models.text_classification.pytorch_hf_text_classification_model)": [[28, "tlt.models.text_classification.pytorch_hf_text_classification_model.PyTorchHFTextClassificationModel"]], "__init__() (tlt.models.text_classification.pytorch_hf_text_classification_model.pytorchhftextclassificationmodel method)": [[28, "tlt.models.text_classification.pytorch_hf_text_classification_model.PyTorchHFTextClassificationModel.__init__"]], "textclassificationmodel (class in tlt.models.text_classification.text_classification_model)": [[29, "tlt.models.text_classification.text_classification_model.TextClassificationModel"]], "__init__() (tlt.models.text_classification.text_classification_model.textclassificationmodel method)": [[29, "tlt.models.text_classification.text_classification_model.TextClassificationModel.__init__"]], "tfhftextclassificationmodel (class in tlt.models.text_classification.tf_hf_text_classification_model)": [[30, "tlt.models.text_classification.tf_hf_text_classification_model.TFHFTextClassificationModel"]], "__init__() (tlt.models.text_classification.tf_hf_text_classification_model.tfhftextclassificationmodel method)": [[30, "tlt.models.text_classification.tf_hf_text_classification_model.TFHFTextClassificationModel.__init__"]], "tftextclassificationmodel (class in tlt.models.text_classification.tf_text_classification_model)": [[31, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel"]], "__init__() (tlt.models.text_classification.tf_text_classification_model.tftextclassificationmodel method)": [[31, "tlt.models.text_classification.tf_text_classification_model.TFTextClassificationModel.__init__"]], "tfmodel (class in tlt.models.tf_model)": [[32, "tlt.models.tf_model.TFModel"]], "__init__() (tlt.models.tf_model.tfmodel method)": [[32, "tlt.models.tf_model.TFModel.__init__"]], "get_dataset() (in module tlt.datasets.dataset_factory)": [[33, "tlt.datasets.dataset_factory.get_dataset"]], "get_model() (in module tlt.models.model_factory)": [[33, "tlt.models.model_factory.get_model"]], "get_supported_models() (in module tlt.models.model_factory)": [[33, "tlt.models.model_factory.get_supported_models"]], "load_dataset() (in module tlt.datasets.dataset_factory)": [[33, "tlt.datasets.dataset_factory.load_dataset"]], "load_model() (in module tlt.models.model_factory)": [[33, "tlt.models.model_factory.load_model"]], "module": [[33, "module-tlt.datasets.dataset_factory"], [33, "module-tlt.models.model_factory"]], "print_supported_models() (in module tlt.models.model_factory)": [[33, "tlt.models.model_factory.print_supported_models"]], "tlt.datasets.dataset_factory": [[33, "module-tlt.datasets.dataset_factory"]], "tlt.models.model_factory": [[33, "module-tlt.models.model_factory"]], "--accuracy-criterion": [[34, "cmdoption-tlt-quantize-accuracy-criterion"]], "--accuracy_criterion": [[34, "cmdoption-tlt-quantize-accuracy-criterion"]], "--add-aug": [[34, "cmdoption-tlt-train-add-aug"]], "--add_aug": [[34, "cmdoption-tlt-train-add-aug"]], "--batch-size": [[34, "cmdoption-tlt-benchmark-batch-size"], [34, "cmdoption-tlt-quantize-batch-size"]], "--batch_size": [[34, "cmdoption-tlt-benchmark-batch-size"], [34, "cmdoption-tlt-quantize-batch-size"]], "--class-names": [[34, "cmdoption-tlt-eval-class-names"], [34, "cmdoption-tlt-train-class-names"]], "--class_names": [[34, "cmdoption-tlt-eval-class-names"], [34, "cmdoption-tlt-train-class-names"]], "--dataset-catalog": [[34, "cmdoption-tlt-eval-dataset-catalog"], [34, "cmdoption-tlt-train-dataset-catalog"]], "--dataset-dir": [[34, "cmdoption-tlt-benchmark-dataset-dir"], [34, "cmdoption-tlt-eval-dataset-dir"], [34, "cmdoption-tlt-quantize-dataset-dir"], [34, "cmdoption-tlt-train-dataset-dir"]], "--dataset-file": [[34, "cmdoption-tlt-eval-dataset-file"], [34, "cmdoption-tlt-train-dataset-file"]], "--dataset-name": [[34, "cmdoption-tlt-eval-dataset-name"], [34, "cmdoption-tlt-train-dataset-name"]], "--dataset_catalog": [[34, "cmdoption-tlt-eval-dataset-catalog"], [34, "cmdoption-tlt-train-dataset-catalog"]], "--dataset_dir": [[34, "cmdoption-tlt-benchmark-dataset-dir"], [34, "cmdoption-tlt-eval-dataset-dir"], [34, "cmdoption-tlt-quantize-dataset-dir"], [34, "cmdoption-tlt-train-dataset-dir"]], "--dataset_file": [[34, "cmdoption-tlt-eval-dataset-file"], [34, "cmdoption-tlt-train-dataset-file"]], "--dataset_name": [[34, "cmdoption-tlt-eval-dataset-name"], [34, "cmdoption-tlt-train-dataset-name"]], "--delimiter": [[34, "cmdoption-tlt-eval-delimiter"], [34, "cmdoption-tlt-train-delimiter"]], "--distributed": [[34, "cmdoption-tlt-train-d"]], "--early-stopping": [[34, "cmdoption-tlt-train-early-stopping"]], "--early_stopping": [[34, "cmdoption-tlt-train-early-stopping"]], "--epochs": [[34, "cmdoption-tlt-train-epochs"]], "--framework": [[34, "cmdoption-tlt-list-models-f"], [34, "cmdoption-tlt-train-f"]], "--hostfile": [[34, "cmdoption-tlt-train-hostfile"]], "--inc-config": [[34, "cmdoption-tlt-benchmark-inc-config"], [34, "cmdoption-tlt-quantize-inc-config"]], "--inc_config": [[34, "cmdoption-tlt-benchmark-inc-config"], [34, "cmdoption-tlt-quantize-inc-config"]], "--init-checkpoints": [[34, "cmdoption-tlt-train-init-checkpoints"]], "--init_checkpoints": [[34, "cmdoption-tlt-train-init-checkpoints"]], "--ipex-optimize": [[34, "cmdoption-tlt-train-ipex_optimize"]], "--ipex_optimize": [[34, "cmdoption-tlt-train-ipex_optimize"]], "--lr-decay": [[34, "cmdoption-tlt-train-lr-decay"]], "--lr_decay": [[34, "cmdoption-tlt-train-lr-decay"]], "--max-trials": [[34, "cmdoption-tlt-quantize-max-trials"]], "--max_trials": [[34, "cmdoption-tlt-quantize-max-trials"]], "--mode": [[34, "cmdoption-tlt-benchmark-mode"]], "--model-dir": [[34, "cmdoption-tlt-benchmark-model-dir"], [34, "cmdoption-tlt-eval-model-dir"], [34, "cmdoption-tlt-optimize-model-dir"], [34, "cmdoption-tlt-quantize-model-dir"]], "--model-name": [[34, "cmdoption-tlt-eval-model-name"], [34, "cmdoption-tlt-train-model-name"]], "--model_dir": [[34, "cmdoption-tlt-benchmark-model-dir"], [34, "cmdoption-tlt-eval-model-dir"], [34, "cmdoption-tlt-optimize-model-dir"], [34, "cmdoption-tlt-quantize-model-dir"]], "--model_name": [[34, "cmdoption-tlt-eval-model-name"], [34, "cmdoption-tlt-train-model-name"]], "--nnodes": [[34, "cmdoption-tlt-train-nnodes"]], "--nproc-per-node": [[34, "cmdoption-tlt-train-nproc_per_node"]], "--nproc_per_node": [[34, "cmdoption-tlt-train-nproc_per_node"]], "--output-dir": [[34, "cmdoption-tlt-benchmark-output-dir"], [34, "cmdoption-tlt-optimize-output-dir"], [34, "cmdoption-tlt-quantize-output-dir"], [34, "cmdoption-tlt-train-output-dir"]], "--output_dir": [[34, "cmdoption-tlt-benchmark-output-dir"], [34, "cmdoption-tlt-optimize-output-dir"], [34, "cmdoption-tlt-quantize-output-dir"], [34, "cmdoption-tlt-train-output-dir"]], "--timeout": [[34, "cmdoption-tlt-quantize-timeout"]], "--use-case": [[34, "cmdoption-tlt-list-models-use-case"]], "--use-horovod": [[34, "cmdoption-tlt-train-use-horovod"]], "--use_case": [[34, "cmdoption-tlt-list-models-use-case"]], "--use_horovod": [[34, "cmdoption-tlt-train-use-horovod"]], "--verbose": [[34, "cmdoption-tlt-list-models-verbose"]], "-d": [[34, "cmdoption-tlt-train-d"]], "-f": [[34, "cmdoption-tlt-list-models-f"], [34, "cmdoption-tlt-train-f"]], "tlt-benchmark command line option": [[34, "cmdoption-tlt-benchmark-batch-size"], [34, "cmdoption-tlt-benchmark-dataset-dir"], [34, "cmdoption-tlt-benchmark-inc-config"], [34, "cmdoption-tlt-benchmark-mode"], [34, "cmdoption-tlt-benchmark-model-dir"], [34, "cmdoption-tlt-benchmark-output-dir"]], "tlt-eval command line option": [[34, "cmdoption-tlt-eval-class-names"], [34, "cmdoption-tlt-eval-dataset-catalog"], [34, "cmdoption-tlt-eval-dataset-dir"], [34, "cmdoption-tlt-eval-dataset-file"], [34, "cmdoption-tlt-eval-dataset-name"], [34, "cmdoption-tlt-eval-delimiter"], [34, "cmdoption-tlt-eval-model-dir"], [34, "cmdoption-tlt-eval-model-name"]], "tlt-list-models command line option": [[34, "cmdoption-tlt-list-models-f"], [34, "cmdoption-tlt-list-models-use-case"], [34, "cmdoption-tlt-list-models-verbose"]], "tlt-optimize command line option": [[34, "cmdoption-tlt-optimize-model-dir"], [34, "cmdoption-tlt-optimize-output-dir"]], "tlt-quantize command line option": [[34, "cmdoption-tlt-quantize-accuracy-criterion"], [34, "cmdoption-tlt-quantize-batch-size"], [34, "cmdoption-tlt-quantize-dataset-dir"], [34, "cmdoption-tlt-quantize-inc-config"], [34, "cmdoption-tlt-quantize-max-trials"], [34, "cmdoption-tlt-quantize-model-dir"], [34, "cmdoption-tlt-quantize-output-dir"], [34, "cmdoption-tlt-quantize-timeout"]], "tlt-train command line option": [[34, "cmdoption-tlt-train-add-aug"], [34, "cmdoption-tlt-train-class-names"], [34, "cmdoption-tlt-train-d"], [34, "cmdoption-tlt-train-dataset-catalog"], [34, "cmdoption-tlt-train-dataset-dir"], [34, "cmdoption-tlt-train-dataset-file"], [34, "cmdoption-tlt-train-dataset-name"], [34, "cmdoption-tlt-train-delimiter"], [34, "cmdoption-tlt-train-early-stopping"], [34, "cmdoption-tlt-train-epochs"], [34, "cmdoption-tlt-train-f"], [34, "cmdoption-tlt-train-hostfile"], [34, "cmdoption-tlt-train-init-checkpoints"], [34, "cmdoption-tlt-train-ipex_optimize"], [34, "cmdoption-tlt-train-lr-decay"], [34, "cmdoption-tlt-train-model-name"], [34, "cmdoption-tlt-train-nnodes"], [34, "cmdoption-tlt-train-nproc_per_node"], [34, "cmdoption-tlt-train-output-dir"], [34, "cmdoption-tlt-train-use-horovod"]]}})